{"version":3,"sources":["assets/loading.svg","utils/theme.js","history.js","components/material/Header/CloseButton.jsx","components/material/Button/index.jsx","components/material/Header/style.js","utils/setAuthToken.js","utils/service.js","components/material/Header/index.jsx","components/material/AppBody/index.jsx","components/Button.jsx","components/If.jsx","components/Text.jsx","components/Status.jsx","pages/Signup/styles.js","utils/masks.js","pages/Signup/User.jsx","components/popups/Signup.jsx","components/material/Text/index.jsx","components/material/Title/index.jsx","components/material/Modal/index.jsx","pages/Login/Login.jsx","pages/Dashboard/user_info.js","pages/Dashboard/Profile.jsx","pages/Dashboard/Info.jsx","components/material/FormButton/index.jsx","pages/Dashboard/style.js","pages/Dashboard/EditEnterpriseForm.jsx","pages/Project/style.js","pages/Project/DashboardProjectList.jsx","pages/Enterprises/style.js","pages/Enterprises/DashboardEnterpriseList.jsx","pages/Dashboard/index.js","components/material/RoleCard/index.jsx","pages/Dashboard/Admin/style.js","pages/Dashboard/Admin/Admin.jsx","components/PrivateRoute.js","components/Flexbox.jsx","components/material/Switch/index.jsx","pages/Signup/dicioFields.js","pages/Signup/Enterprise.jsx","components/material/Tables/index.jsx","pages/Enterprises/index.jsx","components/material/ChipOptions/style.js","components/material/ChipOptions/index.jsx","pages/Signup/Agency.jsx","pages/Agency/style.js","pages/Agency/index.jsx","components/material/FormText/index.jsx","components/material/CardProject/index.jsx","pages/Project/AllProjects.jsx","components/FileList/styles.js","components/FileList/index.js","components/Upload/styles.js","components/Upload/index.js","aws-config.js","pages/Project/ProjectRegister.jsx","pages/EsqueciSenha/style.js","pages/EsqueciSenha/EsqueciSenha.jsx","pages/RedefinirAsenha/RedefinirAsenha.jsx","pages/Project/ProjectDetails.jsx","pages/Project/EditProject.jsx","pages/Project/UserProjectsList.jsx","App.js","models/index.js","models/auth.js","models/register.js","models/user.js","models/project.js","models/enterprise.js","models/agency.js","models/ui.js","store.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","text","primary","secondary","disabled","hint","main","light","contrastText","dark","common","white","contrastThreshold","tonalOffset","ptBR","createBrowserHistory","basename","CloseButton","onClick","color","isOpened","compColor","IconButton","aria-label","fontSize","Button","type","children","styles","isLoading","variant","size","fullWidth","className","endIcon","startIcon","style","PropTypes","node","bool","string","defaultProps","undefined","Wrapper","styled","nav","StyledLogo","img","isNotAuthenticated","StyledAside","NavLink","button","aside","setAuthToken","token","axios","defaults","headers","px","value","defaultValue","newValue","css","isEmpty","Object","keys","length","trim","getUserType","mountFileObj","file","id","uuid","fileId","name","fileObj","path","error","uploaded","s3Options","Bucket","process","Key","ContentType","Body","ContentLength","Header","setAuth","useStoreActions","actions","auth","logoutUser","toggleMenu","ui","useStoreState","state","menuOpened","useEffect","localStorage","jwtToken","decoded","jwtDecode","isAuthenticated","user","currentTime","Date","now","exp","role","Container","Grid","container","justify","href","target","rel","src","width","height","alt","to","StyledBody","div","AppBody","StyledButton","props","minWidth","margin","top","bottom","left","right","background","shape","oneOfType","number","If","condition","IfElse","True","False","StyledText","p","weight","Text","Error","msg","Section","section","Form","form","Background","WrapButton","WrapObs","h1","TitleObs","AssociateLegalText","cnpjMask","replace","phoneMask","cepMask","Users","useForm","register","handleSubmit","errors","getValues","reset","registerUser","useState","modalStatus","setModalStatus","registerError","user_type","onSubmit","data","formatted","confirm_password","confirmPassword","self_declaration","selfDeclaration","setTimeout","Typography","textAlign","component","spacing","item","xs","TextField","email","message","helperText","inputRef","required","pattern","label","password","validate","isMatch","minLength","maxLength","phone","onInput","display","Snackbar","open","autoHideDuration","onClose","Alert","elevation","severity","SignupPopup","toggleModalStatus","handleClick","userType","setItem","align","compSize","Title","getSize","DialogTitle","classes","other","justifyContent","disableTypography","Modal","isOpen","title","Dialog","maxWidth","aria-labelledby","PaperProps","backgroundColor","boxShadow","dividers","useStyles","makeStyles","signUpButton","marginTop","FormStyled","ButtonsWrapper","Login","modalErrorStatus","setModalErrorStatus","modalErrorMsg","setModalErrorMsg","authUser","loginError","formatedType","history","push","center","alignItems","FormControl","InputLabel","htmlFor","FilledInput","endAdornment","InputAdornment","position","FormHelperText","Signup","anchorOrigin","vertical","horizontal","formatPhone","num","getInfo","values","campo","valor","user_email","agency_name","agency_fancy","address","address_number","address_complement","neighborhood","city","cep","agency_tel","cnpj","qtd_projects","enterprise_name","enterprise_fancy","enterprise_tel","StyledProfile","Profile","icon","StyledInfo","Info","infoList","map","info","index","key","val","FormButton","compVariant","WrapperLoadding","ButtonWrapper","ModalForm","EditEnterpriseForm","setError","clearError","setValue","getPostalData","e","then","street","catch","err","console","log","userTypeIsEnterprise","onBlur","InputLabelProps","shrink","placeholder","multiline","rows","observation","marginBottom","SubTitle","ProjectStatusTag","ProjectListItemContainer","ProjectDetailsContainer","ProjectDetailSubtitle","h4","ProjectDetailRegionContainer","DashboardProjectList","projects","project","_id","draft","complet_project","paid","Group","DashboardWrapper","showProjects","childrenLength","React","memo","enterprises","canRegisterNewProject","setDashboardProjects","showProjectsList","setShowProjectsList","allProjects","setAllProjects","getProjects","getAllProjects","a","response","filteredProject","filter","enterprise_id","shouldExpandProjects","includes","pathname","concat","handleShowProjects","Dashboard","getUser","editUser","userErrors","editEnterprise","enterprise","editAgency","agency","createEnterprise","getEnterprisesByAgency","getEnterprisesByAgencyId","hasProjects","dashboardProjects","editEnterpriseModal","setEditEnterpriseModal","editUserModal","setEditUserModal","createEnterpriseModal","setCreateEnterpriseModal","askToNewProjectsModal","setAskToNewProjectsModal","snackbarActive","setSnackbarActive","snackbarMessage","setSnackbarMessage","submitCreateEnterprise","agency_id","status","submitEditUser","submitEditEnterprise","isEnterprise","submitFunction","responseData","userTypeName","agencyUser","loading","shouldNotRegisterProject","parseInt","direction","Paper","padding","associate","aberje_associate","fontWeight","slice","user_id","StyledCard","Card","RoleCard","CardContent","WrapperChoices","gutterBottom","PrivateRoute","Component","rest","render","Flexbox","end","displayName","SwitchLabels","onChange","defaultChecked","hasValue","setState","FormGroup","row","FormControlLabel","control","Checkbox","checked","event","Array","String","project_category","project_region","region_choice","Enterprise","clearErrors","registerEnterprise","active","snackbarState","setSnackbarState","numCols","qtdProjects","errorMessage","isValid","Boolean","Autocomplete","options","renderInput","params","agree_terms","descendingComparator","b","orderBy","EnhancedTableHead","order","headCells","onRequestSort","TableHead","TableRow","headCell","property","cols","indexOf","colName","TableCell","sortDirection","TableSortLabel","useToolbarStyles","root","paddingLeft","paddingRight","highlight","lighten","flex","EnhancedTableToolbar","Toolbar","paper","table","visuallyHidden","border","clip","overflow","EnhancedTable","list","setOrder","setOrderBy","page","setPage","setOpen","rowsPerPage","setRowsPerPage","emptyRows","Math","min","TableContainer","Table","rowCount","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","hc","nameCell","cell","hover","tabIndex","action","Tooltip","tooltip","btn","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","numeric","disablePadding","EnterprisesList","getAllEnterprises","getAllEnterpriseUsers","filterClearList","name_enterprise","indice","StyledChips","ChipOptions","listValues","onAddTerm","txtValue","addValue","handleAddTerm","term","newList","ref","onKeyDown","keyCode","preventDefault","handleEnter","labelWidth","Chip","onDelete","marginRight","Agency","registerAgency","setAberjeAssociate","agencyData","clients","split","AgenciesList","agencies","getAllAgencies","getAllAgencyUsers","name_agency","FormText","minHeight","flexDirection","pos","CardProject","projectTitle","enterpriseName","projectDescription","location","md","CardActions","AllProjects","match","getProject","projectList","setProjects","projectFullList","setFullProjects","setProjectsState","lowerText","toLowerCase","filterProjects","startsWith","handleText","requirements","ul","FileInfo","completed","FileList","files","handleDelete","dragActive","dragReject","DropContainer","attrs","isDragActive","isDragReject","messageColors","default","success","UploadMessage","Upload","renderDragMessage","this","onUpload","filesAccepted","accept","onDropAccepted","getRootProps","getInputProps","s3","AWS","S3","accessKeyId","secretAccessKey","Project","watch","enterpriseId","registerProject","charactersCount","setCharactersCount","setFiles","authorizationLetter","setAuthorizationLetter","signatureFile","setSignatureFile","setDraft","projectCreatorIndex","setProjectCreatorIndex","projectCreators","setProjectCreators","typeOfUser","agreeState","agree","alert","filesArray","signaturesArray","signature","authorizationLetterFile","hasOthersContacts","others_contacts","some","tel","attachment","window","confirm","total_period","inputProps","max","project_about","category_about","reduce","accumulator","upload","url","Location","addProjectCreator","renderRemoveButton","h3","EsqueciSenha","modalState","setModalState","modalMsg","setModalMsg","forgotPassword","hasErrors","RedefinirAsenha","useParams","resetPassword","payload","confirmedPassword","ProjectDetails","setProject","hasAttachments","hasProjectCreators","project_creators","wordBreak","Divider","category","isVideo","isImg","controls","download","contact","EditProject","editProject","hasProjectData","fancyName","UserProjectsList","searchValue","setSearchValue","filteredList","App","store","ThemeProvider","exact","ProjectRegister","Admin","AllEnterprises","AllAgencies","from","authModel","thunk","post","res","removeItem","get","check","hasAdditionalRegister","setErrors","clear","registerModel","userModel","userTypeData","setUser","getUserById","put","getAllUsers","users","projectModel","enterpriseModel","fuse","userFilter","i","setEnterprises","getEnterpriseById","getAll","agencyModel","setAgencies","getAgencyById","addres_complement","uiModel","storeModel","products","GlobalModels","example","createStore","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.97c957c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.8c0be046.svg\";","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ptBR } from '@material-ui/core/locale';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    text: {\r\n      primary: \"rgb(0, 48, 101)\",\r\n      secondary: \"rgb(0, 48, 82)\",\r\n      disabled: \"rgb(0, 48, 90)\",\r\n      hint: \"rgb(0, 48, 120)\"\r\n    },\r\n    primary: {\r\n      main: '#FFFFFF',\r\n      light: '#FAFAFA',\r\n      contrastText: '#222'\r\n    },\r\n    secondary: {\r\n      main: '#222',\r\n      dark: '#6f0000'\r\n    },\r\n    common: {\r\n      white: '#FAFAFA',\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n}, ptBR);\r\n\r\nexport default theme;","import { createBrowserHistory } from 'history'\r\nexport default createBrowserHistory({ basename: '/' })\r\n","import React from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst CloseButton = ({ onClick, color, isOpened }) => {\r\n  const compColor = color || 'primary'\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"menu\"\r\n      onClick={onClick}\r\n    >\r\n      {\r\n        isOpened ?\r\n          <CloseIcon color={compColor} fontSize=\"large\" /> :\r\n          <MenuIcon color={compColor} fontSize=\"large\" />\r\n      }\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default CloseButton\r\n","import React from 'react'\r\nimport ButtonMaterial from '@material-ui/core/Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ type, onClick, children, disabled, styles, isLoading, color, variant, size, fullWidth = false, className, endIcon, startIcon}) => {\r\n\r\n  return (\r\n    <ButtonMaterial\r\n      variant={variant}\r\n      color={color}\r\n      disabled={disabled}\r\n      type={type}\r\n      onClick={onClick}\r\n      size={size}\r\n      style={styles}\r\n      fullWidth={fullWidth}\r\n      className={className}\r\n      endIcon={endIcon}\r\n      startIcon={startIcon}\r\n    >\r\n      {children}\r\n    </ButtonMaterial>\r\n  )\r\n}\r\n\r\nexport default Button\r\n\r\nconst { node, bool, string } = PropTypes\r\n\r\nButton.propTypes = {\r\n  isLoading: bool,\r\n  /** Children nodes. */\r\n  children: node,\r\n  /** Disable button. */\r\n  disabled: bool,\r\n  /** Button type. */\r\n  type: string,\r\n  /** Button min-width. */\r\n  minWidth: string,\r\n  /** Button size. */\r\n  size: string\r\n}\r\n\r\nButton.defaultProps = {\r\n  isLoading: false,\r\n  type: 'button',\r\n  disabled: false,\r\n  variant: undefined,\r\n  color: 'primary',\r\n  size: 'large'\r\n}","import styled from 'styled-components'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Wrapper = styled.nav`\r\n  position: relative;\r\n  background-color: #003065;\r\n  padding: 5px;\r\n  transition: .3s all ease-in-out;\r\n  display: flex;\r\n  left: 0;\r\n\r\n  &.opened {\r\n    left: -320px;\r\n  }\r\n  .container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n\r\n`\r\n\r\nconst StyledLogo = styled.img`\r\nmargin-left: ${({ isNotAuthenticated }) => isNotAuthenticated ? '0' : '30px'};\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  text-decoration: none;\r\n  color: #FFFFFF;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`\r\nconst StyledBurger = styled.button`\r\n  outline: none;\r\n  background: transparent;\r\n  position: relative;\r\n  width: 32px;\r\n  height: 15px;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  &:after,\r\n  &:before,\r\n  > span {\r\n    content: '';\r\n    width: 20px;\r\n    height: 2px;\r\n    background: #FFFFFF;\r\n    display: block;\r\n    position: absolute;\r\n  }\r\n\r\n  &:before {\r\n    top: 0;\r\n  }\r\n\r\n  &:after {\r\n    top: 10px;\r\n  }\r\n\r\n  > span {\r\n    top: 5px\r\n  }\r\n`\r\n\r\nconst StyledAside = styled.aside`\r\n  transition: .3s all ease-in-out;\r\n  position: fixed;\r\n  right: -320px;\r\n  top: 0;\r\n  width: 320px;\r\n  height: 100%;\r\n  background: #003065;\r\n\r\n  .buttons {\r\n    padding: 24px 48px;\r\n    position: relative;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    left: 0;\r\n\r\n    a,\r\n    button {\r\n      display: block;\r\n      color: #FFFFFF;\r\n      width: 100%;\r\n      text-align: left;\r\n      font-weight: normal;\r\n    }\r\n  }\r\n\r\n  &.opened {\r\n    right: 0;\r\n  }\r\n`\r\nexport {\r\n  Wrapper,\r\n  StyledLogo,\r\n  StyledNavLink,\r\n  StyledBurger,\r\n  StyledAside\r\n}","import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply to every request\r\n    axios.defaults.headers.common['Authorization'] = token\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common['Authorization']\r\n  }\r\n}\r\n\r\nexport default setAuthToken\r\n","import { css } from 'styled-components'\r\nimport uuid from 'uuid';\r\n\r\nexport const px = (value, defaultValue) => {\r\n  if (value && typeof value === 'string') {\r\n    return value\r\n  }\r\n\r\n  const newValue = `${value || defaultValue || 0}px`\r\n  return css`${newValue}`\r\n}\r\n\r\nexport const emailValidation = () => (\r\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\r\n)\r\n\r\nexport const isEmpty = (value) => {\r\n  return value === undefined ||\r\n    value === null ||\r\n    (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n    (typeof value === 'string' && value.trim().length === 0)\r\n}\r\n\r\nexport const parseText = input => input.toLowerCase().split(' ').join('_').normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\")\r\n\r\nexport const formatCheckboxFields = (field = []) => {\r\n  const identifiers = Object.keys(field)\r\n  return identifiers.filter((i) => field[i])\r\n}\r\n\r\nexport const getUserType = (type) => {\r\n  switch (type) {\r\n    case 'enterprise':\r\n    case 'empresa':\r\n      return 'empresa'\r\n    case 'agency':\r\n    case 'agencia':\r\n      return 'agencia'\r\n    default:\r\n      return 'admin'\r\n  }\r\n}\r\n\r\nexport const validatingFields = (value) => {\r\n  if (value) return value;\r\n\r\n  switch (typeof value) {\r\n    case \"number\":\r\n      return 0;\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\nexport const mountFileObj = (file) => {\r\n  const id = uuid();\r\n  const fileId = `${id}-${file.name}`;\r\n  const fileObj = {\r\n    file,\r\n    name: file.path,\r\n    error: false,\r\n    uploaded: false,\r\n    id: fileId,\r\n    type: file.type\r\n  }\r\n\r\n  const s3Options = {\r\n    Bucket: process.env.REACT_APP_AWS_BUCKET_NAME,\r\n    Key: id,\r\n    ContentType: file.type,\r\n    Body: file,\r\n    ContentLength: file.size,\r\n  }\r\n\r\n  return {\r\n    fileObj,\r\n    s3Options\r\n  }\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport jwtDecode from 'jwt-decode'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport CloseButton from './CloseButton'\r\nimport Button from '../Button'\r\nimport {\r\n  Wrapper,\r\n  StyledLogo,\r\n  StyledAside,\r\n  StyledNavLink\r\n} from './style';\r\n\r\nimport setAuthToken from '../../../utils/setAuthToken'\r\nimport { isEmpty, getUserType } from '../../../utils/service'\r\n\r\nconst Header = () => {\r\n  const setAuth = useStoreActions(actions => actions.auth.setAuth)\r\n  const logoutUser = useStoreActions(actions => actions.auth.logoutUser)\r\n  const toggleMenu = useStoreActions(actions => actions.ui.toggleMenu)\r\n  const auth = useStoreState(state => state.auth.auth)\r\n  const { menuOpened } = useStoreState(state => state.ui)\r\n\r\n\r\n  useEffect(() => {\r\n    if (localStorage.jwtToken) {\r\n      // Set the auth token header auth\r\n      setAuthToken(localStorage.jwtToken)\r\n\r\n      // Decode token and get user info and exp\r\n      const decoded = jwtDecode(localStorage.jwtToken)\r\n\r\n      // Set user and auth\r\n      setAuth({\r\n        isAuthenticated: !isEmpty(decoded),\r\n        user: decoded\r\n      })\r\n\r\n      // Check for expired token\r\n      const currentTime = Date.now() / 1000\r\n      if (decoded.exp < currentTime) {\r\n        // Logout user\r\n        // Clear current profile\r\n        // Redirect to login\r\n        logoutUser()\r\n      }\r\n    }\r\n  }, [setAuth, logoutUser])\r\n\r\n  const type = getUserType(auth && auth.user.type)\r\n  const isAuthenticated = auth && auth.isAuthenticated;\r\n  return (\r\n    <Wrapper\r\n      className={`navbar ${menuOpened && 'opened'}`}\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <Container>\r\n        <Grid container justify={isAuthenticated ? 'space-between' : 'center'}>\r\n          <a href=\"http://www.aberje.com.br/premio/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <StyledLogo\r\n              src=\"http://www.aberje.com.br/premio/images/logotipo_premio1.png\"\r\n              width=\"150\"\r\n              height=\"64\"\r\n              alt=\"Aberje Logotipo\"\r\n              isNotAuthenticated={!isAuthenticated}\r\n            />\r\n          </a>\r\n          {isAuthenticated && (\r\n            <CloseButton\r\n              aria-label=\"menu\"\r\n              onClick={() => toggleMenu(!menuOpened)}\r\n              isOpened={menuOpened}\r\n            />\r\n          )}\r\n        </Grid>\r\n        {\r\n          isAuthenticated && (\r\n            <StyledAside\r\n              className={menuOpened && 'opened'}\r\n            >\r\n              <div className=\"buttons\">\r\n                <a\r\n                  href=\"http://aberje.com.br/premio/index.html\"\r\n                  rel=\"noopener noreferrer\"\r\n                  onClick={() => toggleMenu(!menuOpened)}\r\n                >\r\n                  <Button>Home</Button>\r\n                </a>\r\n                {\r\n                  isAuthenticated &&\r\n                  (<>\r\n                    <NavLink to={`/dashboard/${type}`}>\r\n                      <Button onClick={() => toggleMenu(!menuOpened)}>\r\n                        Dashboard\r\n                      </Button>\r\n                    </NavLink>\r\n                    <Button\r\n                      onClick={() => toggleMenu(!menuOpened)}\r\n                    ><span onClick={logoutUser}>Sair</span></Button>\r\n                  </>)\r\n                }\r\n              </div>\r\n            </StyledAside>\r\n          )\r\n        }\r\n      </Container>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from 'styled-components'\r\nimport React from 'react'\r\nimport { useStoreState } from 'easy-peasy'\r\n\r\nconst StyledBody = styled.div`\r\n  color: rgb(0, 48, 101);\r\n  position: relative;\r\n  transition: .3s all ease-in-out;\r\n  left: 0;\r\n  \r\n  &.opened {\r\n    left: -320px;\r\n  }\r\n\r\n  button:hover {\r\n    &[type='button'] {\r\n      color:rgb(0, 48, 101);\r\n    }\r\n  }\r\n\r\n  .MuiFormLabel-root,\r\n  .MuiIconButton-colorPrimary {\r\n    color: rgb(0, 48, 101);\r\n  }\r\n\r\n  .form-group {\r\n    display: flex;\r\n\r\n    .option {\r\n      flex: 50%;\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst AppBody = ({ children }) => {\r\n  const { menuOpened } = useStoreState(state => state.ui)\r\n\r\n  return (\r\n    <StyledBody className={menuOpened && 'opened'}>\r\n      {children}\r\n    </StyledBody>\r\n  )\r\n}\r\n\r\nexport default AppBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.button`\r\n  ${props => `min-width: ${props.minWidth || '120px'};`}\r\n  ${props => props.margin && props.margin.top && `margin-top: ${props.margin.top};`}\r\n  ${props => `margin-bottom: ${(props.margin && props.margin.bottom) || '.5rem'};`}\r\n  ${props => props.margin && props.margin.left && `margin-left: ${props.margin.left};`}\r\n  ${props => `margin-right: ${(props.margin && props.margin.right) || '10px'};`}\r\n  ${props => `color: ${props.color || '#FFFFFF'};`}\r\n  ${props => `background: ${props.background || '#fc9b44'};`}\r\n  line-height: 1.5;\r\n  padding-bottom: calc(.5em - 1px);\r\n  padding-left: calc(.75em - 1px);\r\n  padding-right: calc(.75em - 1px);\r\n  padding-top: calc(.5em - 1px);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n  border: none;\r\n  text-decoration: none;\r\n`\r\n\r\nconst Button = ({ type, onClick, children, disabled, styles, isLoading }) => (\r\n  <StyledButton\r\n    className={`button ${isLoading ? 'is-loading' : ''} ${styles}`}\r\n    disabled={disabled}\r\n    type={type}\r\n    onClick={onClick}\r\n  >\r\n    {children}\r\n  </StyledButton>\r\n)\r\n\r\nexport default Button\r\n\r\nconst { node, bool, string, shape, oneOfType, number } = PropTypes\r\n\r\nButton.propTypes = {\r\n  isLoading: bool,\r\n  /** Children nodes. */\r\n  children: node,\r\n  /** Disable button. */\r\n  disabled: bool,\r\n  /** Button type. */\r\n  type: string,\r\n  /** Button min-width. */\r\n  minWidth: string,\r\n  /** Button margin. */\r\n  margin: shape({\r\n    top: oneOfType([string, number]),\r\n    bottom: oneOfType([string, number]),\r\n    left: oneOfType([string, number]),\r\n    right: oneOfType([string, number])\r\n  }),\r\n}\r\n\r\nButton.defaultProps = {\r\n  isLoading: false,\r\n  type: 'button',\r\n  disabled: false,\r\n  style: 'is-rounded normal is-danger',\r\n  margin: {\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n  }\r\n}","export const If = ({ condition, children }) => (condition ? children : false);\r\n\r\nexport const IfElse = ({ condition, True, False }) =>\r\n  condition ? True : False;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledText = styled.p`\r\n  ${props => `font-size: ${props.size || '11px'};`}\r\n  ${props => `color: ${props.color || '#000'};`}\r\n  ${props => `font-weight: ${props.weight || '400'};`}\r\n  ${props => `margin: ${props.margin || '0'};`}\r\n`\r\n\r\n\r\nconst Text = ({ children, ...props }) => <StyledText {...props}>{children}</StyledText>\r\n\r\nexport default Text","import React from 'react'\r\nimport { If } from './If'\r\nimport Text from './Text'\r\n\r\nexport const Error = ({ msg }) => (\r\n  <If condition={typeof msg === 'string'}>\r\n    <Text\r\n      color=\"#f14668\"\r\n      size=\".75rem\"\r\n      margin=\"0 0 .75rem 0\"\r\n      weight=\"600\"\r\n    >\r\n      {msg}\r\n    </Text>\r\n  </If>\r\n)\r\n\r\nexport const Success = ({ msg }) => (\r\n  <If condition={msg !== ''}>\r\n    <Text\r\n      color=\"#1ee81e\"\r\n      size=\".75rem\"\r\n      margin=\"0 0 .75rem 0\"\r\n      weight=\"600\"\r\n    >\r\n      {msg}\r\n    </Text>\r\n  </If>\r\n)\r\n","import styled from 'styled-components'\r\n\r\nexport const Section = styled.section`\r\n  margin: 20px;\r\n  height 100%;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  @media (min-width: 1024px){\r\n    width: 75%;\r\n    margin: 0 auto;\r\n    margin-top: 40px;\r\n  }\r\n`\r\n\r\nexport const Success = styled.div`\r\n  color: #79A9D2;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n`\r\n\r\nexport const Background = styled.div`\r\n  height: 100%;\r\n\r\n  h2 {\r\n    text-align: center;\r\n    font-weight: bold;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  form {\r\n    > * {\r\n      margin: 5px 0;\r\n    }\r\n  }\r\n`\r\n\r\nexport const WrapButton = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  p {\r\n    font-size: 18px;\r\n    width: 50%;\r\n  }\r\n\r\n  button {\r\n    height: fit-content;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n  color: #000;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport const WrapObs = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  @media only screen and (min-width: 1024px){\r\n    line-height: 0.5em;\r\n  }\r\n`\r\n\r\nexport const TitleObs = styled.p`\r\ncolor: brown;\r\nfont-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n`\r\n\r\nexport const AssociateLegalText = styled.p`\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  font-family: \"Roboto\", \"Helvetica\", \"Arial\", sans-serif;\r\n  margin: 5px 0px;\r\n  margin-left: 8px;\r\n`","export const cpfMask = (value) => {\r\n    if (!value) return '';\r\n    return value\r\n        .replace(/\\D/g, '')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d{1,2})/, '$1-$2')\r\n        .replace(/(-\\d{2})\\d+?$/, '$1')\r\n};\r\n\r\nexport const cnpjMask = (value) => {\r\n    if (!value) return '';\r\n    return value\r\n        .replace(/\\D/g, '')\r\n        .replace(/(\\d{2})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d)/, '$1.$2')\r\n        .replace(/(\\d{3})(\\d)/, '$1/$2')\r\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\r\n        .replace(/(-\\d{2})\\d+?$/, '$1')\r\n}\r\n\r\n\r\nexport const phoneMask = (value) => {\r\n    if (!value) return '';\r\n    return value\r\n        .replace(/\\D/g, '')\r\n        .replace(/(\\d{2})(\\d)/, '($1) $2')\r\n        .replace(/(\\d{4})(\\d)/, '$1-$2')\r\n        .replace(/(\\d{4})-(\\d)(\\d{4})/, '$1$2-$3')\r\n        .replace(/(-\\d{4})\\d+?$/, '$1')\r\n}\r\n\r\nexport const cepMask = (value) => {\r\n    if (!value) return '';\r\n    return value\r\n        .replace(/\\D/g, '')\r\n        .replace(/(\\d{5})(\\d)/, '$1-$2')\r\n        .replace(/(-\\d{3})\\d+?$/, '$1')\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '../../components/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Error } from '../../components/Status'\r\n\r\nimport { emailValidation } from '../../utils/service'\r\n\r\n\r\nimport { Form, Section } from './styles'\r\nimport { phoneMask } from '../../utils/masks'\r\n\r\nconst Users = () => {\r\n  const { register, handleSubmit, errors, getValues, reset } = useForm()\r\n\r\n  const registerUser = useStoreActions(actions => actions.register.registerUser)\r\n  const [modalStatus, setModalStatus] = useState(false)\r\n  const registerError = useStoreState(state => state.register.error)\r\n  //  const labelName = localStorage.user_type === 'enterprise' ? 'Nome do Responsável' : 'Nome'\r\n  const onSubmit = (data) => {\r\n    const formatted = {\r\n      ...data,\r\n      confirm_password: data.confirmPassword,\r\n      self_declaration: data.selfDeclaration,\r\n      type: localStorage.user_type\r\n    }\r\n\r\n    reset()\r\n    setModalStatus(true)\r\n    setTimeout(() => {\r\n      registerUser(formatted)\r\n    }, 3000)\r\n  }\r\n\r\n  const userType = localStorage.user_type === 'enterprise' ? 'Empresa' : 'Agência';\r\n\r\n  useEffect(() => {\r\n    if (typeof localStorage.user_type === 'undefined') return setModalStatus(true)\r\n  }, []);\r\n\r\n  return (\r\n    <Section className=\"container\">\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Typography\r\n          color=\"primary\"\r\n          variant=\"h4\"\r\n          style={{ textAlign: 'center', margin: '10px 0', color: '#003065' }}\r\n          component=\"h4\">Formulário de Inscrição</Typography>\r\n        <Typography\r\n          color=\"primary\"\r\n          variant=\"h6\"\r\n          style={{ textAlign: 'center', margin: '10px 0', color: '#800000' }}\r\n          component=\"h5\">Ficha com os dados da pessoa representante pela inscrição\r\n        </Typography>\r\n\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"email\"\r\n              fullWidth\r\n              error={errors.email && errors.email.message}\r\n              helperText={errors.email && errors.email.message}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                pattern: {\r\n                  value: emailValidation(),\r\n                  message: 'Insira um endereço de e-mail válido'\r\n                }\r\n              })}\r\n              label=\"Endereço de e-mail\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"password\"\r\n              fullWidth\r\n              type=\"password\"\r\n              error={errors.password && errors.password.message}\r\n              helperText={errors.password && errors.password.message}\r\n              inputRef={register({\r\n                required: 'Insira uma senha',\r\n              })}\r\n              label=\"Senha\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"confirmPassword\"\r\n              fullWidth\r\n              type=\"password\"\r\n              error={errors.confirmPassword && errors.confirmPassword.message}\r\n              helperText={errors.confirmPassword && errors.confirmPassword.message}\r\n              inputRef={register({\r\n                required: 'Confirme sua senha',\r\n                validate: {\r\n                  isMatch: value => value === getValues().password || 'As senhas não combinam, tente novamente',\r\n                },\r\n                minLength: {\r\n                  value: 6,\r\n                  message: 'A senha precisa ter no mínimo 6 caracteres'\r\n                }\r\n              })}\r\n              label=\"Confirme sua senha\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"name\"\r\n              fullWidth\r\n              error={errors.name && errors.name.message}\r\n              helperText={errors.name && errors.name.message}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                maxLength: {\r\n                  value: 60,\r\n                }\r\n              })}\r\n              label=\"Nome completo do responsável\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"phone\"\r\n              fullWidth\r\n              error={errors.phone && errors.phone.message}\r\n              helperText={errors.phone && errors.phone.message}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                pattern: {\r\n                  message: 'Insira apenas números'\r\n                }\r\n              })}\r\n              onInput={({ target }) => target.value = phoneMask(target.value)}\r\n              label=\"Contato Telefônico (DDD + nº)\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n\r\n        <Error msg={registerError && registerError.user} />\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              styles={{ display: 'block', width: '100%' }}\r\n            >\r\n              Enviar\r\n              </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Form>\r\n\r\n      <Snackbar open={modalStatus} autoHideDuration={6000} onClose={() => setModalStatus(false)}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"success\">\r\n          Usuário cadastrado com sucesso! Agora acesse sua conta e saiba os próximos passos!\r\n          </Alert>\r\n      </Snackbar>\r\n    </Section>\r\n  )\r\n}\r\n\r\nexport default Users","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nimport Button from '../../components/material/Button'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`\r\nconst SignupPopup = ({ toggleModalStatus }) => {\r\n  const handleClick = userType => {\r\n    // Where I set what type of user is being registered\r\n    localStorage.setItem('user_type', userType)\r\n    return toggleModalStatus()\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Link to=\"/cadastro\" onClick={() => handleClick(\"enterprise\")}>\r\n        <Button variant=\"primary\" size=\"lg\">\r\n          Empresa\r\n          </Button>\r\n      </Link>\r\n      <Link to=\"/cadastro\" onClick={() => handleClick(\"agency\")}>\r\n        <Button variant=\"primary\" size=\"lg\">\r\n          Agência\r\n          </Button>\r\n      </Link>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\n\r\nexport default SignupPopup","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst Text = ({ children, color, size, align, style }) => {\r\n  const compColor = color || 'contrastText'\r\n  const compSize = size || 'body2'  \r\n  return(\r\n    <Typography\r\n      align={align}\r\n      variant={compSize}\r\n      component='p'\r\n      color={compColor}\r\n      style={{...style, display: 'block'}}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nexport default Text","import React from 'react'\r\nimport Text from '../Text'\r\n\r\nconst getSize = size => {\r\n  let component;\r\n\r\n  switch (size) {\r\n    case 'xs':\r\n      component = 'h6'\r\n      break\r\n    case 'sm':\r\n      component = 'h5'\r\n      break\r\n    case 'md':\r\n      component = 'h4'\r\n      break\r\n    case 'lg':\r\n      component = 'h3'\r\n      break\r\n    case 'xl':\r\n    default:\r\n      component = 'h2'\r\n      break\r\n  }\r\n  return component\r\n}\r\n\r\nconst Title = ({ children, color, size, align, style }) => {\r\n  const compColor = color || 'primaryText'\r\n  const compSize = getSize(size)\r\n  return (\r\n    <Text\r\n      align={align}\r\n      size={compSize}\r\n      color={compColor}\r\n      style={style}\r\n    >\r\n      <strong>{children}</strong>\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Title","import React from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nconst DialogTitle = props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle\r\n      style={{ display: 'flex', justifyContent: 'space-between' }}\r\n      disableTypography\r\n      {...other}>\r\n      <Typography component=\"h2\" variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n};\r\n\r\n\r\n\r\nfunction Modal({ children, isOpen, onClose, title }) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        onClose={onClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        PaperProps={{\r\n          style: {\r\n            backgroundColor: '#FFFFFF',\r\n            boxShadow: 'none',\r\n          },\r\n        }}\r\n        open={isOpen}>\r\n        {title && <DialogTitle id=\"customized-dialog-title\" onClose={onClose}>\r\n          {title}\r\n        </DialogTitle>}\r\n        <MuiDialogContent dividers>\r\n          {children}\r\n        </MuiDialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal","import React, { useEffect, useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Link } from 'react-router-dom'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport styled from 'styled-components'\r\n\r\nimport Email from '@material-ui/icons/Mail'\r\nimport Senha from '@material-ui/icons/Lock'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FilledInput from '@material-ui/core/FilledInput'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Button from './../../components/material/Button'\r\nimport SignupPopup from '../../components/popups/Signup'\r\nimport Title from './../../components/material/Title'\r\nimport Modal from './../../components/material/Modal'\r\nimport { emailValidation } from '../../utils/service'\r\nimport history from '../../history'\r\nimport { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  signUpButton: {\r\n    backgroundColor: theme.palette.text.primary,\r\n    marginTop: 20,\r\n    color: theme.palette.primary.main\r\n  }\r\n}));\r\n\r\nconst Login = () => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [modalStatus, setModalStatus] = useState(false)\r\n  const [modalErrorStatus, setModalErrorStatus] = useState(false)\r\n  const [modalErrorMsg, setModalErrorMsg] = useState('')\r\n  const authUser = useStoreActions(actions => actions.auth.authUser)\r\n  const auth = useStoreState(state => state.auth.auth)\r\n  const loginError = useStoreState(state => state.auth.error)\r\n  const onSubmit = (data) => authUser(data)\r\n\r\n  useEffect(() => {\r\n    if (auth) {\r\n      const { user: { type = '' }, isAuthenticated } = auth\r\n      const formatedType = type === \"enterprise\" ? \"empresa\" : \"agencia\"\r\n      if (isAuthenticated) return history.push(`/dashboard/${formatedType}`)\r\n    }\r\n\r\n    if (loginError && loginError.message) {\r\n      setModalErrorMsg(loginError.message)\r\n      setModalErrorStatus(true)\r\n    }\r\n  }, [auth, loginError])\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Container\r\n      center\r\n      style={{\r\n        height: 'calc(100vh - 107px)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      <Grid container alignItems=\"stretch\" justify=\"center\">\r\n        <FormStyled onSubmit={handleSubmit(onSubmit)}>\r\n          <Title style={{ textAlign: 'center' }}>\r\n            Acessar\r\n            </Title>\r\n\r\n          <FormControl fullWidth style={{ margin: '10px 0' }} variant=\"filled\">\r\n            <InputLabel htmlFor=\"filled-adornment-password\">E-mail</InputLabel>\r\n            <FilledInput\r\n              id=\"filled-adornment-password\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              error={errors.email}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                pattern: {\r\n                  value: emailValidation(),\r\n                  message: 'Insira um endereço de e-mail válido'\r\n                }\r\n              })}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <Email color=\"primary\" />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            {errors.email && (<FormHelperText error>{errors.email.message}</FormHelperText>)}\r\n          </FormControl>\r\n\r\n          <FormControl fullWidth variant=\"filled\">\r\n            <InputLabel htmlFor=\"filled-adornment-password\">Senha</InputLabel>\r\n            <FilledInput\r\n              id=\"filled-adornment-password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              error={errors.password}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                minLength: {\r\n                  value: 6,\r\n                  message: 'A senha deve ter no mínimo 6 caracteres'\r\n                }\r\n              })}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <Senha color=\"primary\" />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            {errors.password && (<FormHelperText error>{errors.password.message}</FormHelperText>)}\r\n          </FormControl>\r\n          <ButtonsWrapper>\r\n            <Link to=\"/esqueci-senha\">\r\n              <Button>\r\n                Esqueceu sua senha?\r\n            </Button>\r\n            </Link>\r\n\r\n            <Button variant=\"contained\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n              Entrar\r\n            </Button>\r\n          </ButtonsWrapper>\r\n          <Button variant=\"contained\" color=\"primary\" fullWidth className={classes.signUpButton} onClick={() => setModalStatus(!modalStatus)}>\r\n            Não possui uma conta? Clique aqui.\r\n          </Button>\r\n        </FormStyled>\r\n      </Grid>\r\n      <Modal\r\n        title=\"Cadastre-se\"\r\n        isOpen={modalStatus}\r\n        onClose={() => setModalStatus(false)}\r\n      >\r\n        <SignupPopup\r\n          toggleModalStatus={() => setModalStatus(!modalStatus)}\r\n        />\r\n      </Modal>\r\n      <Snackbar open={modalErrorStatus} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} autoHideDuration={3000} onClose={() => setModalErrorStatus(false)}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setModalErrorStatus(false)} severity=\"error\">\r\n          {modalErrorMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst FormStyled = styled.form`\r\nwidth: 50%;\r\n@media(max-width:650px){\r\n  width: 100%;\r\n}\r\n`\r\n\r\nconst ButtonsWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  button {\r\n    span {\r\n      color: black;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Login","import states from '../../assets/states.json'\r\n\r\nexport const getState = (\r\n  stateID,\r\n  searchFor = 'id',\r\n  format = 'abbr') => states.filter(state => state[searchFor] === stateID)[0][format]\r\n\r\nfunction formatPhone(num = \"\") {\r\n  if(num === null) return '';\r\n  num = num.replace(/\\D/g, \"\");\r\n  num = num.replace(/^(\\d{2})(\\d)/g, \"($1) $2\");\r\n  num = num.replace(/(\\d)(\\d{4})$/, \"$1-$2\");\r\n  return num;\r\n}\r\n\r\n\r\nexport const getInfo = (user, type) => {\r\n  return type === 'agency' ?\r\n    [\r\n      {\r\n        title: 'Informações do Responsável',\r\n        values: [\r\n          {\r\n            campo: 'Nome do Responsável',\r\n            valor: user.name\r\n          },\r\n          {\r\n            campo: 'Telefone',\r\n            valor: formatPhone(user.phone)\r\n          },\r\n          {\r\n            campo: 'E-mail corporativo',\r\n            valor: user.user_email\r\n          },\r\n        ],\r\n\r\n\r\n      },\r\n\r\n      {\r\n        title: 'Informações da agência',\r\n        values: [\r\n          {\r\n            campo: 'Razão Social',\r\n            valor: user.agency_name,\r\n          },\r\n          {\r\n            campo: 'Nome Fantasia',\r\n            valor: user.agency_fancy\r\n          },\r\n          {\r\n            campo: 'Endereço',\r\n            valor: user.address && user.address_number && `${user.address},  ${user.address_number} - ${user.address_complement} - ${user.neighborhood}, ${user.city} - ${user.cep}`\r\n          },\r\n          {\r\n            campo: 'Telefone',\r\n            valor: formatPhone(user.agency_tel)\r\n          },\r\n          {\r\n            campo: 'CNPJ',\r\n            valor: user.cnpj\r\n          },\r\n          {\r\n            campo: 'Quantidade de projetos',\r\n            valor: user.qtd_projects\r\n          },\r\n        ],\r\n      },\r\n    ] :\r\n    [\r\n      {\r\n        title: 'Informações do Responsável',\r\n        values: [\r\n          {\r\n            campo: 'Nome do Responsável',\r\n            valor: user.name\r\n          },\r\n          {\r\n            campo: 'Telefone',\r\n            valor: formatPhone(user.phone)\r\n          },\r\n          {\r\n            campo: 'E-mail corporativo',\r\n            valor: user.user_email\r\n          },\r\n        ],\r\n\r\n\r\n      },\r\n\r\n      {\r\n        title: 'Informações da empresa',\r\n        values: [\r\n          {\r\n            campo: 'Razão Social',\r\n            valor: user.enterprise_name,\r\n          },\r\n          {\r\n            campo: 'Nome Fantasia',\r\n            valor: user.enterprise_fancy\r\n          },\r\n          {\r\n            campo: 'Endereço',\r\n            valor: user.address && user.address_number && `${user.address},  ${user.address_number} - ${user.address_complement} - ${user.neighborhood}, ${user.city} - ${user.cep}`\r\n          },\r\n          {\r\n            campo: 'Telefone',\r\n            valor: formatPhone(user.enterprise_tel)\r\n          },\r\n          {\r\n            campo: 'CNPJ',\r\n            valor: user.cnpj\r\n          },\r\n          {\r\n            campo: 'Quantidade de projetos',\r\n            valor: user.qtd_projects\r\n          },\r\n        ],\r\n      },\r\n    ]\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Title from './../../components/material/Title'\r\n\r\nconst StyledProfile = styled.div`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  justify-content: center;\r\n\r\n  .main-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .image {\r\n    width: 80px;\r\n    height: 80px;\r\n    border-radius: 100%;\r\n    color: #ffffff;\r\n    background: rgb(0, 48, 101);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .associate {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .bio {\r\n    text-align: justify;\r\n    word-break: break-all;\r\n  }\r\n\r\n  .segments {\r\n    color: rgb(0, 48, 101);\r\n    text-align: center;\r\n    margin-top: 20px;\r\n  }\r\n\r\n  h2, h3, h4, h6 {\r\n    color: rgb(0, 48, 101);;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nfunction Profile({ id, icon, name }) {\r\n  return (\r\n    <StyledProfile className='profile'>\r\n      <div className=\"main-info\">\r\n        <span className=\"image\">{icon}</span>\r\n        <Title size=\"md\"><strong>{name}</strong></Title>\r\n      </div>\r\n\r\n\r\n    </StyledProfile>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Title from './../../components/material/Title'\r\nimport Text from './../../components/material/Text'\r\n\r\nconst StyledInfo = styled.div`\r\n  width: 100%;\r\n  margin-right: 70px;\r\n  \r\n  .sec {\r\n    margin-bottom: 20px;\r\n    border-bottom: 2px solid rgba(26,26,26, .2);\r\n    &:last-child {\r\n      border-bottom-color: transparent;\r\n    } \r\n\r\n    h6 {\r\n      color: rgb(0, 48, 101);;\r\n    }\r\n  }\r\n\r\n  .values {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n\r\n    .field {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n\r\n      strong {\r\n        color: rgb(0, 48, 101);;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Info({ infoList }) {\r\n  return (\r\n    <StyledInfo className='info'>\r\n      {\r\n        infoList.map((info, index) => (\r\n          <div className=\"sec\" key={`${info.title}-${index}`}>\r\n            <Title align=\"left\" size=\"xs\"><strong>{info.title}</strong></Title>\r\n            <div className=\"values\">\r\n              {\r\n                info.values.map((val, index) => (\r\n                  <div className=\"field\" key={`${val.campo}-${index}`}>\r\n                    <Text color=\"black\"><strong>{val.campo}</strong></Text>\r\n                    <Text color=\"secondary\">{val.valor}</Text>\r\n                  </div>\r\n                ))\r\n              }\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </StyledInfo>\r\n  )\r\n}\r\n\r\nexport default Info","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst FormButton = ({ type, variant, color, children, onClick }) => {\r\n  const compColor = color || 'primary'\r\n  const compVariant = variant || 'contained'\r\n  const classes = useStyles()\r\n  return (\r\n    <Button\r\n      type={type}\r\n      variant={compVariant}\r\n      size=\"large\"\r\n      className={classes.margin}\r\n      color={compColor}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default FormButton","import styled from 'styled-components';\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n`\r\n\r\nexport const Button = styled.button`\r\n  font-size: 16px;\r\n  background-color: #FF4500;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 30px;\r\n  color: white;\r\n  cursor: pointer;\r\n`\r\n\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 1vh 0;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 22px;\r\n  color: #FFFFFF;\r\n  align-self: center;\r\n`\r\n\r\nexport const Textarea = styled.p`\r\n  font-size: 16px; \r\n  color: #FFFFFF; \r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 16px;\r\n  margin-right: 1vw;\r\n  color: #FFFFFF;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  &.header {\r\n    width: 100%;\r\n    \r\n    > .container {\r\n      align-items: stretch;\r\n    }\r\n    \r\n  }\r\n\r\n  .container {\r\n    box-shadow:\r\n    0px 3px 3px -2px rgba(0,0,0,0.2),\r\n    0px 3px 4px 0px rgba(0,0,0,0.14),\r\n    0px 1px 8px 0px rgba(0,0,0,0.12);\r\n    border-radius: 3px;\r\n    background-color: #FAFAFA;\r\n    padding: 15px;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    .profile {\r\n      flex: 40%;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n\r\n    .profile-wrapper {\r\n      display: flex;\r\n      .avatar {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        margin-right: 100px;\r\n\r\n        .image {\r\n          width: 80px;\r\n          height: 80px;\r\n          border-radius: 100%;\r\n          color: #FFFFFF !important;\r\n          background:rgb(0, 48, 101);\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n        }\r\n      }\r\n        .user-info {\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-left: 20px;\r\n          > * {\r\n            display: flex;\r\n            align-items: center;\r\n            margin: 2px 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const GroupButton = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 1vh 0;\r\n  justify-content: flex-end;\r\n`\r\nexport const ButtonDelete = styled.button`\r\n  font-size: 16px;\r\n  background-color: #FF4500;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px 30px;\r\n  color: white;\r\n  cursor: pointer;\r\n  margin-left: 2vh;\r\n`\r\n\r\nexport const GroupButtons = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 1vh 0;\r\n  justify-content: flex-end;\r\n`\r\n\r\nexport const WrapperLoadding = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n  width: 100%;\r\n  display: inline-block;\r\n  text-align: right;\r\n`\r\n\r\nexport const ModalForm = styled.form`\r\n  .form-field {\r\n    margin-bottom: 10px\r\n  }\r\n`","import React from 'react';\r\nimport cep from 'cep-promise';\r\nimport { TextField, Grid, Button } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport { phoneMask, cepMask } from '../../utils/masks';\r\nimport { ModalForm, ButtonWrapper } from './style';\r\n\r\nconst EditEnterpriseForm = ({ user, onSubmit }) => {\r\n    const { register, errors, handleSubmit, setError, clearError, setValue } = useForm()\r\n\r\n    const getPostalData = (e) => {\r\n        const value = e.target.value;\r\n        if (value.length < 9) return;\r\n\r\n        cep(value)\r\n            .then((data) => {\r\n                setValue([\r\n                    { city: data.city },\r\n                    { neighborhood: data.neighborhood },\r\n                    { address: data.street },\r\n                ])\r\n                clearError('cep')\r\n            }).catch((err) => {\r\n                console.log(err);\r\n                setError('cep', 'notMatch', 'CEP não encontrado')\r\n            });\r\n    };\r\n\r\n    const userTypeIsEnterprise = user.type === \"enterprise\";\r\n    return (\r\n        <ModalForm onSubmit={handleSubmit(onSubmit)}>\r\n            {userTypeIsEnterprise ? (\r\n                <>\r\n                    <TextField\r\n                        name=\"enterprise_name\"\r\n                        label=\"Razão Social\"\r\n                        defaultValue={user.enterprise_name}\r\n                        error={errors.enterprise_name && errors.email.enterprise_name}\r\n                        helperText={errors.enterprise_name && errors.email.enterprise_name}\r\n                        inputRef={register({\r\n                            required: 'Este campo é obrigatório',\r\n                        })}\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        className=\"form-field\"\r\n                    />\r\n                    <TextField\r\n                        name=\"enterprise_fancy\"\r\n                        label=\"Nome Fantasia\"\r\n                        defaultValue={user.enterprise_fancy}\r\n                        error={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                        helperText={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                        inputRef={register({\r\n                            required: 'Este campo é obrigatório',\r\n                        })}\r\n                        variant=\"filled\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        className=\"form-field\"\r\n                    />\r\n                    <TextField\r\n                        name=\"enterprise_tel\"\r\n                        value={user.enterprise_tel}\r\n                        fullWidth\r\n                        error={errors.enterprise_tel && errors.enterprise_tel.message}\r\n                        helperText={errors.enterprise_tel && errors.enterprise_tel.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório',\r\n                            pattern: {\r\n                                message: 'Insira apenas números'\r\n                            }\r\n                        })}\r\n                        onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                        label=\"Telefone\"\r\n                        variant=\"filled\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <TextField\r\n                            name=\"agency_name\"\r\n                            label=\"Razão Social\"\r\n                            defaultValue={user.agency_name}\r\n                            error={errors.agency_name && errors.email.agency_name}\r\n                            helperText={errors.agency_name && errors.email.agency_name}\r\n                            inputRef={register({\r\n                                required: 'Este campo é obrigatório',\r\n                            })}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            className=\"form-field\"\r\n                        />\r\n                        <TextField\r\n                            name=\"agency_fancy\"\r\n                            label=\"Nome Fantasia\"\r\n                            defaultValue={user.agency_fancy}\r\n                            error={errors.agency_fancy && errors.agency_fancy.message}\r\n                            helperText={errors.agency_fancy && errors.agency_fancy.message}\r\n                            inputRef={register({\r\n                                required: 'Este campo é obrigatório',\r\n                            })}\r\n                            variant=\"filled\"\r\n                            color=\"secondary\"\r\n                            fullWidth\r\n                            className=\"form-field\"\r\n                        />\r\n                        <TextField\r\n                            name=\"agency_tel\"\r\n                            defaultValue={user.agency_tel}\r\n                            fullWidth\r\n                            error={errors.agency_tel && errors.agency_tel.message}\r\n                            helperText={errors.agency_tel && errors.agency_tel.message}\r\n                            inputRef={register({\r\n                                required: 'Esse campo é obrigatório',\r\n                                pattern: {\r\n                                    message: 'Insira apenas números'\r\n                                }\r\n                            })}\r\n                            onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                            label=\"Telefone\"\r\n                            variant=\"filled\"\r\n                            className=\"form-field\"\r\n                        />\r\n                    </>\r\n                )}\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name=\"cep\"\r\n                        defaultValue={user.cep}\r\n                        fullWidth\r\n                        error={errors.cep && errors.cep.message}\r\n                        helperText={errors.cep && errors.cep.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório',\r\n                            pattern: {\r\n                                message: 'Insira apenas números'\r\n                            }\r\n                        })}\r\n                        onInput={({ target }) => target.value = cepMask(target.value)}\r\n                        onBlur={getPostalData}\r\n                        label=\"CEP\"\r\n                        variant=\"filled\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField\r\n                        name=\"city\"\r\n                        value={user.city}\r\n                        defaultValue={user.city}\r\n                        fullWidth\r\n                        error={errors.city && errors.city.message}\r\n                        helperText={errors.city && errors.city.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório',\r\n                        })}\r\n                        InputLabelProps={{\r\n                            shrink: user.city\r\n                        }}\r\n                        onBlur={getPostalData}\r\n                        label=\"Cidade\"\r\n                        variant=\"filled\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <TextField\r\n                defaultValue={user.address}\r\n                name=\"address\"\r\n                fullWidth\r\n                error={errors.address && errors.address.message}\r\n                helperText={errors.address && errors.address.message}\r\n                inputRef={register({\r\n                    required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                    shrink: user.address\r\n                }}\r\n                label=\"Endereço\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o bairro que a da empresa reside\"\r\n                className=\"form-field\"\r\n            />\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        defaultValue={user.neighborhood}\r\n                        name=\"neighborhood\"\r\n                        fullWidth\r\n                        error={errors.city && errors.city.message}\r\n                        helperText={errors.city && errors.city.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório'\r\n                        })}\r\n                        InputLabelProps={{\r\n                            shrink: user.neighborhood\r\n                        }}\r\n                        label=\"Bairro\"\r\n                        variant=\"filled\"\r\n                        placeholder=\"Insira o bairro que a da empresa reside\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        defaultValue={user.address_number}\r\n                        name=\"address_number\"\r\n                        fullWidth\r\n                        error={errors.address_number && errors.address_number.message}\r\n                        helperText={errors.address_number && errors.address_number.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório'\r\n                        })}\r\n                        InputLabelProps={{\r\n                            shrink: user.address_number\r\n                        }}\r\n                        type=\"number\"\r\n                        label=\"Número\"\r\n                        variant=\"filled\"\r\n                        placeholder=\"Insira o número da empresa\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <TextField\r\n                        defaultValue={user.address_complement}\r\n                        name=\"address_complement\"\r\n                        fullWidth\r\n                        error={errors.address_complement && errors.address_complement.message}\r\n                        helperText={errors.address_complement && errors.address_complement.message}\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório'\r\n                        })}\r\n                        InputLabelProps={{\r\n                            shrink: user.address_complement\r\n                        }}\r\n                        label=\"Complemento\"\r\n                        variant=\"filled\"\r\n                        placeholder=\"Insira o complemento\"\r\n                        className=\"form-field\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        name=\"observation\"\r\n                        className=\"form-field\"\r\n                        label=\"Observação\"\r\n                        multiline\r\n                        rows=\"5\"\r\n                        defaultValue={user.observation}\r\n                        error={errors.observation && errors.observation.message}\r\n                        fullWidth\r\n                        variant=\"filled\"\r\n                        inputRef={register({\r\n                            required: 'Esse campo é obrigatório'\r\n                        })}\r\n                        style={{\r\n                            marginBottom: 20\r\n                        }}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <ButtonWrapper>\r\n                <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    type=\"submit\"\r\n                    styles={{ display: 'block', width: '100%' }}\r\n                >\r\n                    Editar\r\n                </Button>\r\n            </ButtonWrapper>\r\n        </ModalForm>\r\n    )\r\n};\r\n\r\nexport default EditEnterpriseForm;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 95%;\r\n  display: flex;\r\n  margin: 10px auto;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  min-height: calc(100vh - 200px);\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 1.5em;\r\n  font-weight: 600;\r\n  color: #000;\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport const SubTitle = styled.p`\r\n  font-size: 1.5em;\r\n  \r\n`\r\n\r\nexport const Label = styled.p`\r\n  font-size: 17px;\r\n`\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const Textarea = styled.p`\r\n  font-size: 17px;  \r\n  margin-left: 0.5vw;\r\n  color: #000;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  margin: 25px;\r\n`\r\nexport const StyledForm = styled.form`\r\n  > div {\r\n    margin: 5px 0;\r\n  }\r\n`\r\n\r\nexport const WrapButton = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`\r\n\r\nexport const ProjectDetailsWrapper = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 5px;\r\n`\r\nexport const ProjectStatusTag = styled.div`\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  width: fit-content;\r\n  padding: 5px 10px;\r\n  background-color: ${({ color }) => color};\r\n  color: white;\r\n  font-weight: bold;\r\n  border-radius: 50px;\r\n  font-size: 12px;\r\n  margin-bottom: 5px;\r\n\r\n`\r\n\r\nexport const ProjectListItemContainer = styled.div`\r\n  width: 100%;\r\n  padding: 5px 10px;\r\n  color: white;\r\n  box-shadow: 0px 2px 8px rgba(0,0,0,0.2);\r\n  background-color: white;\r\n  border-radius: 4px;\r\n`\r\n\r\nexport const ProjectDetailsContainer = styled.div`\r\n  padding: 40px 10px;\r\n  text-align: center;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n`\r\n\r\nexport const ProjectDetailSubtitle = styled.h4`\r\n  font-size: 1.5rem;\r\n  margin: 10px 0px;\r\n  font-weight: bold;\r\n`\r\nexport const ProjectDetailRegionContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`","import React from 'react';\r\nimport { ProjectStatusTag, ProjectListItemContainer } from './style';\r\nimport { Typography } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst DashboardProjectList = ({ projects }) => (\r\n    <div className=\"project-list\">\r\n        {projects.map((project) => (\r\n            <div key={project._id}>\r\n                <ProjectListItemContainer style={{ marginBottom: 10 }} className=\"wrapper\">\r\n                        <div className=\"tags\">\r\n                            {project.draft && (\r\n                                <Link to={`/projeto/editar/${project._id}`}>\r\n                                    <ProjectStatusTag color='orange'>\r\n                                        Clique para terminar o cadastro\r\n                                    </ProjectStatusTag>\r\n                                </Link>\r\n                            )}\r\n                            <Link to={project.complet_project && `/projeto/${project._id}`}>\r\n                                <ProjectStatusTag color={project.draft ? 'orange' : 'green'}>\r\n                                    {project.draft ? 'Rascunho' : 'Completo - Clique para visualizar'}\r\n                                </ProjectStatusTag>\r\n                            </Link>\r\n                            <ProjectStatusTag color={project.paid ? 'green' : 'red'}>\r\n                                {project.paid ? 'Pagamento realizado' : 'Aguardando o pagamento'}\r\n                            </ProjectStatusTag>\r\n                        </div>\r\n                        <Typography style={{ color: 'black', margin: '5px 5px 10px 5px'}}>{project.title}</Typography>\r\n                </ProjectListItemContainer>\r\n            </div>\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default DashboardProjectList;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  box-sizing: border-box;\r\n  height: inherit;\r\n  width: 95%;\r\n  display: block;\r\n  margin: 10px auto;\r\n`;\r\nexport const Title = styled.h1`\r\n  font-size: 22px;  \r\n  color:#fc9b44;\r\n  margin: 2vw 0;\r\n  text-align: center;\r\n`;\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: center;\r\n  min-height: calc(100vh - 200px);\r\n`\r\nexport const WrapperChoices = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: space-between;\r\n`\r\n\r\n/* STYLES ALLENTERPRISE */\r\n\r\nexport const WrapperSearchEnterprise = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const StyledButtonSearch = styled.button`\r\n  padding: 10px;\r\n  background-color: #6f0000;\r\n  color: #fc9b44;\r\n  `\r\n  export const GroupButton = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nexport const DashboardWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  box-shadow: 0px 2px 6px  rgba(0,0,0,0.1);\r\n  overflow: hidden;\r\n  max-height: ${({ showProjects, childrenLength }) => showProjects ? `${childrenLength * 300}px` : '61px'};\r\n  will-change: max-height;\r\n  transition: max-height .5s ease-in-out;\r\n  div {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n\r\n  .projects-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .project-list {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-flow: row wrap;\r\n\r\n    .wrapper {\r\n      display: flex;\r\n      align-items: flex-start;\r\n      flex-direction: column;\r\n      padding: 0;\r\n\r\n      .tags {\r\n        margin: 5px;\r\n      }\r\n\r\n      p {\r\n        font-weight: bold;\r\n        margin-left: 5px;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { DashboardWrapper } from './style';\r\nimport { Link } from 'react-router-dom'\r\nimport { Button } from '@material-ui/core';\r\nimport { useStoreActions } from 'easy-peasy';\r\nimport DashboardProjectList from '../Project/DashboardProjectList';\r\n\r\nconst DashboardEnterpriseList = ({ enterprises, canRegisterNewProject, setDashboardProjects }) => {\r\n    const [showProjectsList, setShowProjectsList] = useState([])\r\n    const [allProjects, setAllProjects] = useState([])\r\n    const getProjects = useStoreActions(state => state.project.getAllProjects)\r\n\r\n    useEffect(() => {\r\n        setDashboardProjects(0);\r\n        enterprises.map(async ({ _id }) => {\r\n            if(allProjects.length) return;\r\n            const response = await getProjects(_id);\r\n           setAllProjects((state) => [...state, ...response])\r\n           setDashboardProjects((state) => response.length + state);\r\n        });\r\n    }, []);\r\n\r\n    if (!enterprises.length) {\r\n        return (\r\n            <div style={{ height: '100%', textAlign: 'center' }}>\r\n                Você não possui empresas cadastradas\r\n            </div>\r\n        )\r\n    }\r\n    const handleShowProjects = (index) => setShowProjectsList((state) => showProjectsList.includes(index) ? state.filter((item) => item !== index) : state.concat(index));\r\n\r\n    return enterprises.map(({ enterprise_name, _id: id, }, index) => {\r\n        console.log(allProjects)\r\n        const filteredProject = allProjects.filter((project) => project.enterprise_id === id);\r\n        const shouldExpandProjects = showProjectsList.includes(index);\r\n        return (\r\n            <DashboardWrapper showProjects={shouldExpandProjects} childrenLength={filteredProject.length}>\r\n                <div>\r\n                    <h4>{enterprise_name}</h4>\r\n                    <div>\r\n                        {!canRegisterNewProject && (\r\n                            <Link to={{\r\n                                pathname: '/cadastro/projeto',\r\n                                state: { enterprise_id: id }\r\n                            }}>\r\n                                <Button>\r\n                                    Criar projeto\r\n                                </Button>\r\n                            </Link>\r\n                        )}\r\n                        {filteredProject.length > 0 && (\r\n                            <Button onClick={() => handleShowProjects(index)}>\r\n                                {shouldExpandProjects ? \"Esconder Projeos\" : \"Mostrar projetos\"}\r\n                            </Button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                {filteredProject !== undefined && (\r\n                    <div className=\"projects-wrapper\">\r\n                        <h2>Projetos desta empresa</h2>\r\n                        <DashboardProjectList projects={filteredProject} />\r\n                    </div>\r\n                )}\r\n            </DashboardWrapper>\r\n        )\r\n    });\r\n};\r\n\r\nexport default React.memo(DashboardEnterpriseList);","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport Person from '@material-ui/icons/Person'\r\nimport { useForm } from 'react-hook-form'\r\n\r\nimport Enterprise from '@material-ui/icons/AccountBalanceOutlined'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { getInfo } from './user_info'\r\n\r\nimport Profile from './Profile'\r\nimport Info from './Info'\r\n\r\nimport Button from '../../components/material/FormButton'\r\n\r\nimport loading from '../../assets/loading.svg'\r\nimport {\r\n  ModalForm,\r\n  WrapperLoadding,\r\n  ButtonWrapper,\r\n} from './style'\r\nimport Modal from '../../components/material/Modal'\r\nimport { TextField, Snackbar, Typography } from '@material-ui/core'\r\nimport { phoneMask } from '../../utils/masks'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport EditEnterpriseForm from './EditEnterpriseForm';\r\nimport ProjectList from '../Project/DashboardProjectList'\r\nimport DashboardEnterpriseList from '../Enterprises/DashboardEnterpriseList'\r\n\r\nconst Dashboard = () => {\r\n  const userType = useStoreState(state => state.auth.auth.user)\r\n\r\n  const getUser = useStoreActions(actions => actions.user.getUser)\r\n  const editUser = useStoreActions(actions => actions.user.editUser)\r\n\r\n  const user = useStoreState(state => state.user.user) || {};\r\n  const userErrors = useStoreState(state => state.user.errors)\r\n\r\n  const editEnterprise = useStoreActions(({ enterprise }) => enterprise.editEnterprise)\r\n  const editAgency = useStoreActions(({ agency }) => agency.editAgency)\r\n  const createEnterprise = useStoreActions(({ enterprise }) => enterprise.createEnterprise);\r\n\r\n  const getEnterprisesByAgency = useStoreActions(({ enterprise }) => enterprise.getEnterprisesByAgencyId);\r\n  const enterprises = useStoreState(({ enterprise }) => enterprise.enterprises) || [];\r\n\r\n  const allProjects = useStoreState(({ project }) => project.allProjects) || [];\r\n  const getProjects = useStoreActions(state => state.project.getAllProjects)\r\n  const hasProjects = allProjects.length;\r\n  const [dashboardProjects, setDashboardProjects] = useState(0);\r\n  const [editEnterpriseModal, setEditEnterpriseModal] = useState(false)\r\n  const [editUserModal, setEditUserModal] = useState(false)\r\n  const [createEnterpriseModal, setCreateEnterpriseModal] = useState(false);\r\n  const [askToNewProjectsModal, setAskToNewProjectsModal] = useState(false);\r\n  const [snackbarActive, setSnackbarActive] = useState(false)\r\n  const [snackbarMessage, setSnackbarMessage] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    typeof userType.type !== 'undefined' && getUser(userType.type)\r\n    if (userType.type === \"enterprise\") {\r\n      getProjects(userType.id)\r\n    }\r\n\r\n    if (userType.type === \"agency\") {\r\n      getEnterprisesByAgency(userType.id)\r\n    }\r\n\r\n  }, [getEnterprisesByAgency, getProjects, userType, getUser])\r\n\r\n  const { register, errors, handleSubmit } = useForm()\r\n\r\n  const submitCreateEnterprise = async (data) => {\r\n    const response = await createEnterprise({ ...data, agency_id: userType.id });\r\n    if (response.status === 404) {\r\n      setSnackbarActive(true)\r\n      setSnackbarMessage(\"Não foi possível cadastrar a empresa, tente novamente mais tarde.\")\r\n      return false;\r\n    }\r\n\r\n    getEnterprisesByAgency(userType.id)\r\n    setSnackbarMessage('Empresa criada com sucesso')\r\n    setSnackbarActive(true)\r\n    setCreateEnterpriseModal(!createEnterpriseModal)\r\n    return true;\r\n  };\r\n\r\n\r\n  const submitEditUser = async (data) => {\r\n    const response = await editUser({ ...data, type: user.type, id: user.id });\r\n    if (response) {\r\n      setSnackbarActive(true)\r\n      getUser(userType.type)\r\n      setSnackbarMessage('Usuário alterado com sucesso.')\r\n      setEditUserModal(!editUserModal)\r\n      return true;\r\n    }\r\n    setSnackbarActive(true)\r\n    setSnackbarMessage(userErrors.errors)\r\n  }\r\n\r\n  const submitEditEnterprise = async (data) => {\r\n    const id = user.type === \"agency\" ? user.agency_id : user.enterprise_id;\r\n    const isEnterprise = user.type === \"enterprise\";\r\n    const submitFunction = isEnterprise ? editEnterprise : editAgency;\r\n    const { data: responseData } = await submitFunction({ ...user, ...data, id });\r\n    if (responseData.message) {\r\n      getUser(user.type)\r\n      setSnackbarActive(true);\r\n      setSnackbarMessage(responseData.message);\r\n      setEditEnterpriseModal(false)\r\n      return;\r\n    }\r\n    setSnackbarActive(true);\r\n    setSnackbarMessage('Ocorreu um erro ao alterar a empresa.')\r\n    return;\r\n  };\r\n\r\n  const userTypeName = userType.type === \"enterprise\" ? \"empresa\" : \"agencia\"\r\n  const agencyUser = userTypeName === \"agencia\";\r\n\r\n  if (!Object.values(user).length) {\r\n    return (\r\n      <Container>\r\n        <WrapperLoadding>\r\n          <img src={loading} alt=\"loading\" />\r\n        </WrapperLoadding>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  const shouldNotRegisterProject = parseInt(user?.qtd_projects?.[0]) === (agencyUser ? dashboardProjects : allProjects.length);\r\n\r\n  return (\r\n    <Container>\r\n      <Grid container direction=\"row\" display=\"flex\">\r\n        <Grid item xs={4}>\r\n          <Paper style={{ backgroundColor: '#FAFAFA', padding: '15px' }}>\r\n            <Grid item xs={12}>\r\n              <Profile\r\n                id={user._id}\r\n                name={user.enterprise_name || user.name}\r\n                icon={userType.type === \"enterprise\" ?\r\n                  <Enterprise style={{ fontSize: 60 }} /> :\r\n                  <Person style={{ fontSize: 60 }} />}\r\n                associate={user.aberje_associate}\r\n                type={userType.type === \"enterprise\" ? \"Empresa\" : \"Agencia\"}\r\n              />\r\n            </Grid>\r\n            <div style={{ width: '100%', display: 'inline-block', textAlign: 'center' }}>\r\n              <Button onClick={() => setEditUserModal(true)}>Editar usuário</Button>\r\n              <Button onClick={() => setEditEnterpriseModal(true)}>Editar dados da empresa</Button>\r\n            </div>\r\n            <Grid item xs={12}>\r\n              <Info\r\n                infoList={getInfo(user, userType.type)}\r\n              />\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          {hasProjects !== undefined && userType.type === \"enterprise\" && (\r\n            <>\r\n              <Container style={{ width: '100%', display: 'inline-block', textAlign: 'right' }}>\r\n                {!shouldNotRegisterProject ? (\r\n                  <Link to=\"/cadastro/projeto\">\r\n                    <Button variant=\"contained\">\r\n                      Cadastrar Projetos\r\n                          </Button>\r\n                  </Link>\r\n                ) : (\r\n                    <Button variant=\"contained\" onClick={() => setAskToNewProjectsModal(true)}>\r\n                      Solicitar cadastro de novos projetos.\r\n                    </Button>\r\n                  )}\r\n              </Container>\r\n              <Container>\r\n                <Typography variant=\"h3\" style={{ textAlign: 'left', fontWeight: 'bold', marginBottom: 10 }}>\r\n                  Projetos\r\n                  </Typography>\r\n                <ProjectList projects={allProjects.slice(0, 7)} />\r\n                {allProjects.length > 7 && (\r\n                  <Container style={{ width: '100%', display: 'inline-block', textAlign: 'right' }}>\r\n                    <Link to={`/listagem/${userTypeName}/projetos/${user.user_id}`}>\r\n                      <Button variant=\"contained\">\r\n                        Todos os projetos\r\n                      </Button>\r\n                    </Link>\r\n                  </Container>\r\n                )}\r\n              </Container>\r\n            </>\r\n          )}\r\n          {!hasProjects && userType.type === \"enterprise\" && (\r\n            <div style={{ height: '100%', textAlign: 'center' }}>\r\n              Você não possui projetos cadastrados.\r\n            </div>\r\n          )}\r\n          {agencyUser && (\r\n            <>\r\n              <Container style={{ width: '100%', display: 'inline-block', textAlign: 'right' }}>\r\n                <Button variant=\"contained\" onClick={() => setCreateEnterpriseModal(true)}>\r\n                  Cadastrar empresa\r\n            </Button>\r\n              </Container>\r\n              <Container>\r\n                <div style={{ width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n                  <Typography variant=\"h3\" style={{ textAlign: 'left', fontWeight: 'bold', marginBottom: 10 }}>\r\n                    Empresas\r\n                </Typography>\r\n                  {shouldNotRegisterProject && (\r\n                    <Button variant=\"contained\" onClick={() => setAskToNewProjectsModal(true)}>\r\n                      Solicitar cadastro de novos projetos.\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                <DashboardEnterpriseList enterprises={enterprises} canRegisterNewProject={shouldNotRegisterProject} setDashboardProjects={setDashboardProjects} />\r\n              </Container>\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n      {editUserModal && (\r\n        <Modal\r\n          title=\"Editar o usuário\"\r\n          isOpen={editUserModal}\r\n          onClose={() => setEditUserModal(false)}\r\n        >\r\n          <ModalForm onSubmit={handleSubmit(submitEditUser)}>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"E-mail\"\r\n              defaultValue={user.email}\r\n              error={errors.email && errors.email.message}\r\n              helperText={errors.email && errors.email.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n              })}\r\n              variant=\"filled\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              className=\"form-field\"\r\n            />\r\n            <TextField\r\n              name=\"name\"\r\n              label=\"Nome\"\r\n              defaultValue={user.name}\r\n              error={errors.name && errors.name.message}\r\n              helperText={errors.name && errors.name.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n              })}\r\n              variant=\"filled\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              className=\"form-field\"\r\n            />\r\n            <TextField\r\n              name=\"phone\"\r\n              defaultValue={user.phone}\r\n              fullWidth\r\n              error={errors.phone && errors.phone.message}\r\n              helperText={errors.phone && errors.phone.message}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                pattern: {\r\n                  message: 'Insira apenas números'\r\n                }\r\n              })}\r\n              onInput={({ target }) => target.value = phoneMask(target.value)}\r\n              label=\"Contato Telefonico (DDD + nº)\"\r\n              variant=\"filled\"\r\n              className=\"form-field\"\r\n            />\r\n            <ButtonWrapper>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                styles={{ display: 'block', width: '100%' }}\r\n              >\r\n                Editar\r\n                   </Button>\r\n            </ButtonWrapper>\r\n          </ModalForm>\r\n        </Modal>\r\n      )}\r\n      {createEnterpriseModal && (\r\n        <Modal\r\n          title=\"Criar empresa\"\r\n          isOpen={createEnterpriseModal}\r\n          onClose={() => setCreateEnterpriseModal(false)}\r\n        >\r\n          <ModalForm onSubmit={handleSubmit(submitCreateEnterprise)}>\r\n            <TextField\r\n              name=\"enterprise_name\"\r\n              label=\"Nome da empresa\"\r\n              error={errors.enterprise_name && errors.enterprise_name.message}\r\n              helperText={errors.enterprise_name && errors.enterprise_name.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n              })}\r\n              variant=\"filled\"\r\n              color=\"secondary\"\r\n              fullWidth\r\n              className=\"form-field\"\r\n            />\r\n            <ButtonWrapper>\r\n              <Button\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                styles={{ display: 'block', width: '100%' }}\r\n              >\r\n                Criar\r\n              </Button>\r\n            </ButtonWrapper>\r\n          </ModalForm>\r\n        </Modal>\r\n      )}\r\n      {askToNewProjectsModal && (\r\n        <Modal\r\n          title=\"Solicitação de novos projetos\"\r\n          isOpen={askToNewProjectsModal}\r\n          onClose={() => setAskToNewProjectsModal(false)}\r\n        >\r\n          <p>\r\n            A quantidade de projetos selecionada no ato do cadastro já está completa.\r\n           Caso necessite inscrever mais projetos, entre em contato conosco pelo email <a href=\"mailto:mirella@aberje.com.br\">mirella@aberje.com.br</a> informando o número de novos projetos que pretende inserir\r\n           </p>\r\n        </Modal>\r\n      )}\r\n      {editEnterprise && (\r\n        <Modal\r\n          title={user.type === \"enterprise\" ? \"Editar dados da empresa\" : \"Editar dados da agência\"}\r\n          isOpen={editEnterpriseModal}\r\n          onClose={() => setEditEnterpriseModal(false)}\r\n        >\r\n          <EditEnterpriseForm user={user} onSubmit={submitEditEnterprise} />\r\n        </Modal>\r\n      )}\r\n      <Snackbar open={snackbarActive} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} autoHideDuration={3000} onClose={() => setSnackbarActive(false)}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setSnackbarActive(false)} severity=\"info\">\r\n          {snackbarMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Dashboard","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport ButtonMaterial from '@material-ui/core/Button'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Card from '@material-ui/core/Card'\r\n\r\nconst StyledCard = styled(Card)`\r\n  &.role-card {\r\n    background-color: #FAFAFA;\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    \r\n    a {\r\n      color:rgb(0, 48, 101);\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst RoleCard = ({ title, to, icon, children }) => {\r\n  return (\r\n    <StyledCard className='role-card'>\r\n      <CardContent>\r\n        <Link to={to}>\r\n          <div>{icon}</div>\r\n          <ButtonMaterial>\r\n            {title}\r\n          </ButtonMaterial>\r\n        </Link>\r\n        {children}\r\n      </CardContent>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default RoleCard\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  box-sizing: border-box;\r\n  height: inherit;\r\n  width: 95%;\r\n  display: block;\r\n  margin: 10px auto;\r\n`;\r\nexport const Title = styled.h1`\r\n  font-size: 22px;  \r\n    font-size: 22px;  \r\n  font-size: 22px;  \r\n  color:rgb(0, 48, 101);\r\n  margin: 2vw 0;\r\n  text-align: center;\r\n`;\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 40rem;\r\n  justify-content: center;\r\n  min-height: calc(100vh - 200px);\r\n`\r\nexport const WrapperChoices = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: center;\r\n`\r\n\r\n/* STYLES ALLENTERPRISE */\r\n\r\nexport const WrapperSearchEnterprise = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const StyledButtonSearch = styled.button`\r\n  padding: 10px;\r\n  background-color: #6f0000;\r\n  color: #fc9b44;\r\n  `","import React from \"react\"\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport RoleCard from '../../../components/material/RoleCard'\r\n\r\nimport Enterprise from '@material-ui/icons/AccountBalanceOutlined'\r\n// import Person from '@material-ui/icons/Person'\r\nimport { WrapperChoices, Background } from './style'\r\n\r\nconst DashboardWrapper = () => (\r\n  <Background>\r\n    <Typography variant=\"h3\" component=\"h2\" gutterBottom>Escolha uma visão: </Typography>\r\n    <WrapperChoices>\r\n      <RoleCard\r\n        icon={<Enterprise style={{ fontSize: 80, color: 'rgb(0, 48, 101)' }} />}\r\n        to=\"/dashboard/admin/empresas\"\r\n        title=\"Empresas\"\r\n      />\r\n\r\n      <RoleCard\r\n        icon={<Enterprise style={{ fontSize: 80, color: 'rgb(0, 48, 101)' }} />}\r\n        to=\"/dashboard/admin/agencias\"\r\n        title=\"Agências\"\r\n      />\r\n\r\n\r\n      {/* <RoleCard\r\n        icon={<Person style={{ fontSize: 80, color: 'rgb(0, 48, 101)' }} />}\r\n        to=\"/dashboard/admin/profissionais\"\r\n        title=\"Profissional\"\r\n     />*/}\r\n    </WrapperChoices>\r\n  </Background>\r\n)\r\n\r\nexport default DashboardWrapper","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        localStorage.jwtToken ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={'/'}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { px } from '../utils/service'\r\n\r\nconst Flexbox = styled(({ children, className }) => {\r\n  return (\r\n    <div className={className}>\r\n      {children}\r\n    </div>\r\n  )\r\n})`\r\n  display: flex;\r\n\r\n  ${props => props.horizontal && `\r\n    flex-direction: row;\r\n  `}\r\n  ${props => props.vertical && `\r\n    flex-direction: column;\r\n  `}\r\n\r\n  ${props => props.center && `\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n  `}\r\n\r\n  ${props => props.end && `\r\n    align-items: end;\r\n    justify-content: flex-end;\r\n  `}\r\n\r\n  ${props => props.justify && `\r\n    justify-content: ${props.justify};\r\n  `}\r\n\r\n  ${props => props.align && `\r\n    align-items: ${props.align};\r\n  `}\r\n\r\n  ${props => props.width && `\r\n    width: ${props.width};\r\n  `}\r\n\r\n  ${props => props.margin && props.margin.top && `margin-top: ${px(props.margin.top)};`}\r\n  ${props => props.margin && props.margin.bottom && `margin-bottom: ${px(props.margin.bottom)};`}\r\n  ${props => props.margin && props.margin.left && `margin-left: ${px(props.margin.left)};`}\r\n  ${props => props.margin && props.margin.right && `margin-right: ${px(props.margin.right)};`}\r\n\r\n  ${props => props.padding && props.padding.top && `padding-top: ${px(props.padding.top)};`}\r\n  ${props => props.padding && props.padding.bottom && `padding-bottom: ${px(props.padding.bottom)};`}\r\n  ${props => props.padding && props.padding.left && `padding-left: ${px(props.padding.left)};`}\r\n  ${props => props.padding && props.padding.right && `padding-right: ${px(props.padding.right)};`}\r\n`\r\n\r\n// decouple PropTypes only facility design props\r\nconst { shape, oneOfType, string, number } = PropTypes\r\n\r\nFlexbox.propTypes = {\r\n  horizontal: PropTypes.bool,\r\n  vertical: PropTypes.bool,\r\n  center: PropTypes.bool,\r\n  end: PropTypes.bool,\r\n  justify: PropTypes.oneOf(['space-around', 'space-between', 'center', 'space-evenly', 'flex-end']),\r\n  align: PropTypes.oneOf(['center', 'flex-end', 'flex-start']),\r\n  width: PropTypes.string,\r\n  /** The margin property. */\r\n  margin: shape({\r\n    top: oneOfType([string, number]),\r\n    bottom: oneOfType([string, number]),\r\n    left: oneOfType([string, number]),\r\n    right: oneOfType([string, number])\r\n  }),\r\n  /** The padding property. */\r\n  padding: shape({\r\n    top: oneOfType([string, number]),\r\n    bottom: oneOfType([string, number]),\r\n    left: oneOfType([string, number]),\r\n    right: oneOfType([string, number])\r\n  })\r\n}\r\n\r\nFlexbox.defaultProps = {\r\n  margin: {},\r\n  padding: {},\r\n}\r\n\r\nFlexbox.displayName = 'Flexbox'\r\n\r\nexport default Flexbox\r\n","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function SwitchLabels({ value, name, label, register, onChange, error, required, defaultChecked }) {\r\n  const hasValue = value || false\r\n  const [state, setState] = React.useState(hasValue);\r\n\r\n  const handleChange = event => {\r\n    setState(event.target.checked);\r\n    onChange && onChange(event)\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            inputRef={required ? register({ required: 'Este campo é obrigatório' }) : register}\r\n            name={name}\r\n            checked={defaultChecked ? defaultChecked : state}\r\n            onChange={handleChange}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n      {error && <FormHelperText error>{error}</FormHelperText>}\r\n    </FormGroup>\r\n  );\r\n}","export const separated_functions = [\r\n    {\r\n        title: 'DESENVOLVIMENTO',\r\n        list: [\"Consultoria de Roteiro\", \"Pesquisa\", \"Produçāo Executiva\", \"Produçāo de Conteúdo\", \"Roteiro\"]\r\n    },\r\n    {\r\n        title: 'PRODUÇĀO',\r\n        list: [\"Assistência de direção\", \"Assistência de câmera\", \"Assistência de Maquinária\", \"Assistência de som\",\r\n            \"Caracterizaçāo\", \"Cenografia\", \"Chefia de Elétrica  | Gaffer\", \"Chefia de Maquinária\", \"Continuidade\", \"Controller\",\r\n            \"Direçāo\", \"Direçāo de Arte\", \"Direçāo de Fotografia\", \"Direçāo de Produção\", \"DIT | Técnico de Imagem Digital - TID\",\r\n            \"Eletricista de Pré- Light\", \"Figurino\", \"GMA | Logger\", \"Operaçāo de Video Assistente\", \"Operaçāo de Câmera\", \"Platô\",\r\n            \"Preparaçāo de Elenco\", \"Produçāo de Elenco\", \"Produçāo de Arte\", \"Produçāo de Objetos\", \"Still\", \"StoryBoard\",\r\n            \"Supervisāo de Efeitos Especiais\", \"Técnica de som\"]\r\n    },\r\n    {\r\n        title: 'PÓS-PRODUÇÃO',\r\n        list: [\"Animaçāo\", \"Assistência  de edição \", \"Composiçāo Musical\", \"Correção de Cor\",\r\n            \"Ediçāo On-line\", \"Ediçāo de Som\", \"Ediçāo\", \"Legendagem\", \"Supervisāo de Efeitos Visuais\",\r\n            \"Supervisāo de Pós-Produção\", \"Supervisāo  Musical\"]\r\n    },\r\n]\r\n\r\nexport const qtd_projects = [... new Array(20).keys()].map((val) => String(val + 1));\r\n\r\nexport const separeted_category = [\r\n    {\r\n        title: 'Foco no Tema: Comunicação de Programas, projetos e ações voltados a:',\r\n        list: [\"Diversidade e Inclusão\", \"Ética, Integridade e Compliance\", \"Gestão de crises empresariais\", \"Marca\", \"Memória Organizacional\"]\r\n    },\r\n    {\r\n        title: 'Foco em Públicos: Comunicação e relacionamento com:',\r\n        list: [\"Consumidor/Cliente\", \"Imprensa e/ou Influenciadores\", \"Multi Públicos \", \"Público Interno\",\r\n            \"Sociedade\",]\r\n    },\r\n    {\r\n        title: 'Foco em Meios: Produção e Comunicação de:',\r\n        list: [\"Evento\", \"Mídia Audiovisual\", \"Mídia Digital\", \"Mídia de Impressa\",\r\n            \"Publicação Especial\"]\r\n    },\r\n]\r\n\r\n\r\nexport const project_category = [\r\n    \"Diversidade e Inclusão\",\r\n    \"Ética, Integridade e Compliance\",\r\n    \"Gestão de Crises\",\r\n    \"Marca\",\r\n    \"Memória Organizacional\",\r\n    \"Sustentabilidade Organizacional\",\r\n    \"Consumidor/Cliente\",\r\n    \"Imprensa e/ou Influenciadores\",\r\n    \"Multipúblicos \",\r\n    \"Público Interno\",\r\n    \"Sociedade\",\r\n    \"Evento\",\r\n    \"Mídia Audiovisual\",\r\n    \"Mídia Digital\",\r\n    \"Mídia Impressa\",\r\n    \"Publicação Especial\"\r\n]\r\nexport const project_region = [\"Região Espírito Santo e Rio de Janeiro\", \"Região Minas Gerais e Centro-Oeste\", \"Região Norte e Nordeste\", \"Região Sul\", \"Região São Paulo\"]\r\n\r\nexport const region_choice = [\"A região na qual ocorreram as ações de maior relevância do trabalho;\", \"A região-sede da empresa;\"]","import React, { useState, useEffect } from 'react'\r\nimport cep from 'cep-promise';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Flexbox from '../../components/Flexbox'\r\nimport Button from '../../components/material/Button'\r\nimport { Error } from '../../components/Status'\r\nimport Switch from '../../components/material/Switch'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport {\r\n  qtd_projects\r\n} from './dicioFields'\r\nimport { Form, Background, WrapButton, WrapObs, TitleObs, AssociateLegalText } from './styles'\r\nimport { cnpjMask, phoneMask, cepMask } from '../../utils/masks';\r\nimport { cnpj } from 'cpf-cnpj-validator';\r\nimport history from '../../history';\r\n\r\nconst Enterprise = () => {\r\n  const { register, handleSubmit, errors, setValue, setError, getValues, clearErrors } = useForm()\r\n\r\n  const registerEnterprise = useStoreActions(actions => actions.register.registerEnterprise)\r\n  const registerError = useStoreState(state => state.register.error)\r\n  const [snackbarState, setSnackbarState] = useState({ active: false, severity: null, message: null })\r\n  const [aberjeAssociate, setAberjeAssociate] = useState(false)\r\n  const [numCols] = useState(4)\r\n\r\n  const getPostalData = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length < 9) return;\r\n\r\n    cep(value)\r\n      .then((data) => {\r\n        setValue(\"city\", data.city);\r\n        setValue(\"neighborhood\", data.neighborhood);\r\n        setValue(\"address\", data.street);\r\n\r\n        clearErrors([\"cep\"])\r\n      }).catch((err) => {\r\n        console.log({ err })\r\n        setError('cep', {\r\n          type: \"manual\",\r\n          message: \"CEP não encontrado\"\r\n        })\r\n      });\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const formatted = {\r\n      ...data,\r\n      qtd_projects: data.qtdProjects,\r\n      type: 'enterprise'\r\n    }\r\n\r\n    const response = await registerEnterprise(formatted)\r\n    if (response.data && response.status === 200) {\r\n      setSnackbarState({\r\n        active: true,\r\n        severity: 'success',\r\n        message: 'Inscrição Realizada com sucesso! Em breve receberá um e-mail da organização',\r\n      })\r\n      setTimeout(() => {\r\n        return history.push(`/dashboard/empresa`)\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (response.errors) {\r\n      const errorMessage = Object.values(response.errors)\r\n      setSnackbarState({\r\n        active: true,\r\n        severity: 'error',\r\n        message: errorMessage,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const handleCnpjValidator = ({ target }) => {\r\n    const cnpjIsValid = cnpj.isValid(target.value);\r\n    if (!cnpjIsValid) {\r\n      return setError('cnpj', {\r\n        type: \"manual\",\r\n        message: \"CNPJ inválido\"\r\n      });\r\n    }\r\n    clearErrors(\"cnpj\")\r\n  }\r\n\r\n  // const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\r\n\r\n  useEffect(() => {\r\n    register({ name: 'qtdProjects' });\r\n  }, [register]);\r\n\r\n  // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\r\n  return (\r\n    <Background>\r\n      <Flexbox justify=\"center\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Typography variant=\"h4\" component=\"h2\">Ficha de inscrição</Typography>\r\n          <WrapObs>\r\n            <TitleObs>Nesta página, você preencherá a ficha de inscrição. Essa ficha, oficializa a sua participação no <b>Prêmio Aberje 2020.</b></TitleObs>\r\n            <TitleObs>Através deste preenchimento que receberá boleto bancário e recibo, esses documentos serão enviados via e-mail.</TitleObs>\r\n            <TitleObs>Neste momento você não incluirá dados do projeto, somente na ficha de identificação, que é o próximo passo.</TitleObs>\r\n          </WrapObs>\r\n\r\n          <Grid item xs={numCols}>\r\n            <Switch\r\n              name=\"aberje_associate\"\r\n              label=\"Associado Aberje\"\r\n              register={register}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"enterprise_name\"\r\n                fullWidth\r\n                error={errors.enterprise_name && errors.enterprise_name.message}\r\n                helperText={errors.enterprise_name && errors.enterprise_name.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório',\r\n                })}\r\n                label=\"Razão Social\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira a razão social\"\r\n\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"enterprise_fancy\"\r\n                fullWidth\r\n                error={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                helperText={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                label=\"Nome Fantasia\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o nome fantasia\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"cnpj\"\r\n                fullWidth\r\n                error={errors.cnpj && errors.cnpj.message}\r\n                helperText={errors.cnpj && errors.cnpj.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                onInput={({ target }) => target.value = cnpjMask(target.value)}\r\n                onBlur={handleCnpjValidator}\r\n                label=\"CNPJ\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o CNPJ da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"enterprise_tel\"\r\n                fullWidth\r\n                error={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                helperText={errors.enterprise_fancy && errors.enterprise_fancy.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                label=\"Telefone\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o Telefone da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"cep\"\r\n                fullWidth\r\n                error={errors.cep && errors.cep.message}\r\n                helperText={errors.cep && errors.cep.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                onInput={({ target }) => target.value = cepMask(target.value)}\r\n                onBlur={getPostalData}\r\n                label=\"CEP\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o CEP da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"city\"\r\n                fullWidth\r\n                error={errors.city && errors.city.message}\r\n                helperText={errors.city && errors.city.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório',\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().city)\r\n                }}\r\n                label=\"Cidade\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira a cidade que a da empresa reside\"\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"neighborhood\"\r\n                fullWidth\r\n                error={errors.city && errors.city.message}\r\n                helperText={errors.city && errors.city.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().neighborhood)\r\n                }}\r\n                label=\"Bairro\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o bairro que a da empresa reside\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"address\"\r\n                fullWidth\r\n                error={errors.address && errors.address.message}\r\n                helperText={errors.address && errors.address.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().address)\r\n                }}\r\n                label=\"Endereço\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o endereço da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                name=\"address_number\"\r\n                type=\"number\"\r\n                fullWidth\r\n                error={errors.address_number && errors.address_number.message}\r\n                helperText={errors.address_number && errors.address_number.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                label=\"Número\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o número da empresa\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"address_complement\"\r\n                fullWidth\r\n                error={errors.address_complement && errors.address_complement.message}\r\n                helperText={errors.address_complement && errors.address_complement.message}\r\n                label=\"Complemento\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o complemento\"\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h6\" component=\"h6\">Informações do Projeto</Typography>\r\n\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                id=\"filled-multiline-static\"\r\n                label=\"Observação\"\r\n                multiline\r\n                rows=\"5\"\r\n                error={errors.observation && errors.observation.message}\r\n                fullWidth\r\n                name=\"observation\"\r\n                variant=\"filled\"\r\n                inputRef={register}\r\n              />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                options={qtd_projects}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    name=\"qtdProjects\"\r\n                    inputRef={register({\r\n                      required: 'Esse campo é obrigatório'\r\n                    })}\r\n                    color=\"secondary\"\r\n                    label=\"Quantidade de Projetos\"\r\n                    variant=\"filled\"\r\n                    placeholder=\"Selecione a quantidade\"\r\n                    error={errors.qtdProjects && errors.qtdProjects.message}\r\n                    helperText={errors.qtdProjects && errors.qtdProjects.message}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Error msg={registerError && registerError.enterprise} />\r\n\r\n          <WrapButton>\r\n            <AssociateLegalText>\r\n              Declaro que estou ciente de que todos os projetos inscritos estão passíveis de análise por parte da equipe do Prêmio Aberje 2020\r\n              e que pode ser excluído se estiver em desacordo com o&nbsp;\r\n              <a href=\"http://aberje.com.br/premio/images/pdf/regulamento/regulamento_premio_2020.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                regulamento\r\n              </a>.\r\n              <Switch\r\n                name=\"agree_terms\"\r\n                label=\"Estou de acordo\"\r\n                register={register}\r\n                required\r\n                error={errors.agree_terms && errors.agree_terms.message}\r\n              />\r\n            </AssociateLegalText>\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Continuar\r\n            </Button>\r\n          </WrapButton>\r\n          <Snackbar\r\n            open={Boolean(snackbarState.active)}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            autoHideDuration={6000}\r\n            onClose={() => setSnackbarState({ active: false })}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" onClose={() => setSnackbarState({ active: false })} severity={snackbarState.severity}>\r\n              {snackbarState.message}\r\n            </Alert>\r\n          </Snackbar>\r\n        </Form>\r\n      </Flexbox>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default Enterprise","import React from 'react';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] < b[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return b[1] - a[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy, headCells, onRequestSort, actions } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n\r\n  return (\r\n\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {headCells.map(headCell => {\r\n          const cols = Object.keys(headCell).indexOf('label')\r\n          const colName = Object.values(headCell)[cols]\r\n\r\n          return (\r\n\r\n            <TableCell\r\n              key={headCell.id}\r\n              align=\"center\"\r\n              padding='default'\r\n              sortDirection={orderBy === headCell.id ? order : false}\r\n            >\r\n\r\n\r\n\r\n              <TableSortLabel\r\n                active={orderBy === headCell.id}\r\n                direction={orderBy === headCell.id ? order : 'desc'}\r\n                onClick={createSortHandler(headCell.id)}\r\n              >\r\n                {colName}\r\n\r\n              </TableSortLabel>\r\n            </TableCell>\r\n          )\r\n        }\r\n        )}\r\n        {\r\n          actions && (\r\n            <TableCell\r\n              align=\"center\"\r\n              padding='default'\r\n            >\r\n              <TableSortLabel></TableSortLabel>\r\n            </TableCell>\r\n          )\r\n        }\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = ({ title }) => {\r\n  const classes = useToolbarStyles();\r\n  return (\r\n    <Toolbar\r\n      className={classes.root}\r\n    >\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        component=\"h2\"\r\n        id=\"tableTitle\"\r\n      >\r\n        {title}\r\n      </Typography>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    margin: '10px auto',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n    backgroundColor: '#ffffff'\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ headCells, list, title, actions }) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'desc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, list.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar title={title} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"big\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              headCells={headCells}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={list.length}\r\n              actions={actions}\r\n              onClick={() => setOpen(!open)}\r\n\r\n            />\r\n\r\n            <TableBody>\r\n\r\n              {stableSort(list, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => {\r\n                  const hc = headCells.map((nameCell, item, array) => ({\r\n                    cell: nameCell.id,\r\n                    array: array.indexOf()\r\n\r\n                  }))\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      tabIndex={-1}\r\n                      key={row[hc[0].cell] && row[hc[0].array]}\r\n                    >\r\n\r\n\r\n                      {\r\n                        hc.map((name, item, array) => {\r\n                          return (\r\n                            <TableCell padding=\"default\">\r\n                              {row[name.cell]}\r\n\r\n                            </TableCell>\r\n                          )\r\n                        })\r\n                      }\r\n                      {\r\n                        actions && (\r\n                          <TableCell align=\"right\">\r\n                            {actions.map(action => {\r\n                              return (\r\n                                <Tooltip title={action.tooltip}>\r\n                                  {action.type === 'link' ?\r\n                                    <Link to={`${action.action}${row.id}`}>\r\n                                      <IconButton aria-label=\"delete\">{action.btn}</IconButton>\r\n                                    </Link> :\r\n                                    <IconButton aria-label=\"delete\">{action.btn}</IconButton>}\r\n\r\n                                </Tooltip>\r\n                              )\r\n                            })}\r\n                          </TableCell>\r\n                        )\r\n                      }\r\n\r\n                    </TableRow>\r\n\r\n                  );\r\n\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10]}\r\n          component=\"div\"\r\n          count={list.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useStoreState, useStoreActions } from 'easy-peasy'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\nimport ViewListIcon from '@material-ui/icons/ViewList'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport Tables from './../../components/material/Tables'\r\n\r\nimport { IfElse } from '../../components/If'\r\n\r\nimport { Container, Group, Background } from './style'\r\n\r\nconst headCells = [\r\n  { id: 'name_enterprise', numeric: false, disablePadding: false, label: 'Razão Social' },\r\n  { id: 'enterprise_fancy', numeric: false, disablePadding: false, label: 'Nome Fantasia' },\r\n  { id: 'cnpj', numeric: false, disablePadding: false, label: 'CNPJ' },\r\n  { id: 'aberje_associate', numeric: true, disablePadding: true, label: 'Associado' },\r\n  { id: 'cep', numeric: false, disablePadding: false, label: 'CEP' },\r\n  { id: 'address', numeric: false, disablePadding: false, label: 'Endereço' },\r\n  { id: 'address_complement', numeric: false, disablePadding: false, label: 'Compl.' },\r\n  { id: 'neighborhood', numeric: false, disablePadding: false, label: 'Bairro' },\r\n  { id: 'city', numeric: false, disablePadding: false, label: 'Cidade' },\r\n  { id: 'qtd_projects', numeric: true, disablePadding: false, label: 'Projetos' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Responsável' },\r\n  { id: 'email', numeric: false, disablePadding: false, label: 'E-mail' },\r\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Cel' },\r\n  { id: 'observation', numeric: false, disablePadding: false, label: 'Obs.' },\r\n];\r\n\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     width: '50%',\r\n//     '& > * + *': {\r\n//       marginTop: theme.spacing(3),\r\n//     },\r\n//   },\r\n// }));\r\n\r\nconst EnterprisesList = () => {\r\n  const enterprises = useStoreState(state => state.enterprise.enterprises)\r\n  const getAllEnterprises = useStoreActions(actions => actions.enterprise.getAllEnterpriseUsers)\r\n\r\n  useEffect(() => {\r\n    getAllEnterprises()\r\n  }, [getAllEnterprises])\r\n\r\n\r\n  const clearList = enterprises\r\n    .map((enterprise) => ({\r\n      id: enterprise.enterprise_id,\r\n      name_enterprise: enterprise.enterprise_name,\r\n      enterprise_fancy: enterprise.enterprise_fancy,\r\n      cnpj: enterprise.cnpj,\r\n      aberje_associate: enterprise.aberje_associate === true ? 'Sim' : 'Não',\r\n      name: enterprise.name,\r\n      email: enterprise.email,\r\n      phone: enterprise.phone,\r\n      observation: enterprise.observation,\r\n      qtd_projects: enterprise.qtd_projects,\r\n      address: enterprise.address,\r\n      cep: enterprise.cep,\r\n      neighborhood: enterprise.neighborhood,\r\n      address_complement: enterprise.address_complement,\r\n      city: enterprise.city\r\n    }))\r\n\r\n\r\n  const filterClearList = clearList.filter((enterprise, indice) => {\r\n    return enterprise.id !== undefined\r\n  })\r\n\r\n  return (\r\n    <Background className=\"container clearfix et_menu_container\">\r\n      <Container>\r\n        <Group>\r\n          <IfElse\r\n            condition={\r\n              typeof enterprises !== 'undefined' && enterprises.length > 0\r\n            }\r\n            True={\r\n              <Tables\r\n                title=\"Empresas\"\r\n                headCells={headCells}\r\n                list={filterClearList}\r\n                actions={[\r\n                  {\r\n                    action: '/listagem/projetos/',\r\n                    btn: <ViewListIcon />,\r\n                    type: 'link', // link or btn\r\n                    tooltip: 'Ver lista de projetos postados'\r\n                  }\r\n                ]}\r\n              />\r\n            }\r\n            False={\r\n              <Alert severity=\"warning\">Não há empresas cadastradas</Alert>\r\n            }\r\n          />\r\n        </Group>\r\n      </Container>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default EnterprisesList\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledChips = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  .chip-group {\r\n    margin-top: 10px;\r\n  }\r\n`","import React, { useState } from 'react';\r\nimport { StyledChips } from './style';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Chip from '@material-ui/core/Chip'\r\n\r\nconst ChipOptions = ({ register, name, label, error, value }) => {\r\n  const listValues = value || []\r\n  const [list, onAddTerm] = useState(listValues)\r\n  const [txtValue, addValue] = useState('')\r\n\r\n\r\n  const handleAddTerm = (term) => {\r\n    if (!term) return false;\r\n\r\n    const newList = list.includes(term) ?\r\n      list.filter(item => item !== term) :\r\n      [...list, term]\r\n    onAddTerm(newList)\r\n    addValue('')\r\n  }\r\n\r\n  const handleEnter = (e, term) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault()\r\n      return handleAddTerm(term)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <StyledChips>\r\n      <input\r\n        type=\"hidden\"\r\n        name={name}\r\n        value={list}\r\n        ref={register}\r\n      />\r\n      <FormControl>\r\n        <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\r\n        <FilledInput\r\n          id=\"outlined-adornment-password\"\r\n          type='text'\r\n          color=\"primary\"\r\n          value={txtValue}\r\n          error={error}\r\n          onChange={(e) => addValue(e.target.value)}\r\n          onBlur={(e) => addValue(e.target.value)}\r\n          onKeyDown={(e) => handleEnter(e, txtValue)}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={() => handleAddTerm(txtValue)}\r\n              >\r\n                <AddCircleIcon color=\"primary\" />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          labelWidth={70}\r\n        />\r\n        {error && <FormHelperText error>{error}</FormHelperText>}\r\n      </FormControl>\r\n      <div className=\"chip-group\">\r\n        {list &&\r\n          list.map(item =>\r\n            <Chip\r\n              label={item}\r\n              onDelete={() => handleAddTerm(item)}\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              style={{ marginRight: 5 }}\r\n            />)\r\n        }\r\n      </div>\r\n    </StyledChips>\r\n  )\r\n}\r\n\r\nexport default ChipOptions","import React, { useState, useEffect } from 'react'\r\nimport { cnpj } from 'cpf-cnpj-validator';\r\nimport cep from 'cep-promise';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions } from 'easy-peasy'\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\n\r\nimport Flexbox from '../../components/Flexbox'\r\nimport Button from '../../components/material/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nimport ChipOptions from '../../components/material/ChipOptions'\r\nimport Switch from '../../components/material/Switch'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n\r\n\r\nimport {\r\n  qtd_projects\r\n} from './dicioFields'\r\nimport { Form, Background, WrapButton, WrapObs, TitleObs, AssociateLegalText } from './styles'\r\nimport { cepMask, cnpjMask, phoneMask } from '../../utils/masks';\r\nimport history from '../../history';\r\n\r\nconst Agency = () => {\r\n  const { register, handleSubmit, errors, setValue, setError, clearErrors, getValues } = useForm()\r\n\r\n  const registerAgency = useStoreActions(actions => actions.register.registerAgency)\r\n  const [snackbarState, setSnackbarState] = useState({ active: false, severity: null, message: null })\r\n  const [aberjeAssociate, setAberjeAssociate] = useState(false)\r\n  const [numCols] = useState(4)\r\n\r\n  const onSubmit = async (agencyData) => {\r\n    const formatted = {\r\n      ...agencyData,\r\n      qtd_projects: agencyData.qtdProjects,\r\n      clients: agencyData?.clients.split(\",\"),\r\n      type: 'agency',\r\n    }\r\n    const response = await registerAgency(formatted);\r\n    if (response.data && response.status === 200) {\r\n      setSnackbarState({\r\n        active: true,\r\n        severity: 'success',\r\n        message: 'Inscrição Realizada com sucesso! Em breve receberá um e-mail da organização',\r\n      })\r\n      setTimeout(() => {\r\n        return history.push(`/dashboard/agencia`)\r\n      }, 4000);\r\n      return;\r\n    }\r\n\r\n    if (response.errors) {\r\n      const errorMessage = Object.values(response.errors)\r\n      setSnackbarState({\r\n        active: true,\r\n        severity: 'error',\r\n        message: errorMessage,\r\n      })\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  const getPostalData = (e) => {\r\n    const value = e.target.value;\r\n    if (value.length < 9) return;\r\n\r\n    cep(value)\r\n      .then((data) => {\r\n        setValue(\"city\", data.city);\r\n        setValue(\"neighborhood\", data.neighborhood);\r\n        setValue(\"address\", data.street);\r\n        clearErrors('cep')\r\n      }).catch((err) => {\r\n        console.log(err);\r\n        setError('cep',{\r\n          type: \"manual\",\r\n          message: \"CEP não encontrado\",\r\n        })\r\n      });\r\n  };\r\n\r\n  const handleCnpjValidator = ({ target }) => {\r\n    const cnpjIsValid = cnpj.isValid(target.value);\r\n    if (!cnpjIsValid) return setError('cnpj', {\r\n      type: \"manual\",\r\n      message: \"CNPJ inválido.\"\r\n    });\r\n    clearErrors('cnpj');\r\n  }\r\n\r\n\r\n  // const handleRadio = (field, selectedOption) => setValue(field, (selectedOption.toLowerCase() === 'true'))\r\n\r\n  useEffect(() => {\r\n    register({ name: 'qtdProjects' });\r\n    if (typeof localStorage.user_type === 'undefined') return setSnackbarState({ active: false })\r\n  }, [register]);\r\n\r\n  // TODO: req hasNoRegister p/ validar se o usuário tem algum registro como profissional ou empresa. Se sim, redireciona para o dashboard, se não, mantém na página.\r\n  return (\r\n    <Background>\r\n      <Flexbox justify=\"center\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Typography variant=\"h4\" component=\"h2\">Ficha de inscrição</Typography>\r\n\r\n          <WrapObs>\r\n            <TitleObs>Nesta página, você preencherá a ficha de inscrição. Essa ficha, oficializa a sua participação no <b>Prêmio Aberje 2020.</b></TitleObs>\r\n            <TitleObs>Através deste preenchimento que receberá boleto bancário e recibo, esses documentos serão enviados via e-mail.</TitleObs>\r\n            <TitleObs>Neste momento você não incluirá dados do projeto, somente na ficha de identificação, que é o próximo passo.</TitleObs>\r\n          </WrapObs>\r\n\r\n          <Grid item xs={numCols}>\r\n            <Switch\r\n              name=\"aberje_associate\"\r\n              label=\"Associado Aberje\"\r\n              register={register}\r\n              onChange={(e) => setAberjeAssociate(e.target.checked)}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"agency_name\"\r\n                fullWidth\r\n                error={errors.agency_name && errors.agency_name.message}\r\n                helperText={errors.agency_name && errors.agency_name.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                label=\"Razão Social\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira a razão social\"\r\n\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"agency_fancy\"\r\n                fullWidth\r\n                error={errors.agency_fancy && errors.agency_fancy.message}\r\n                helperText={errors.agency_fancy && errors.agency_fancy.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                label=\"Nome Fantasia\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o nome fantasia\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"cnpj\"\r\n                fullWidth\r\n                error={errors.cnpj && errors.cnpj.message}\r\n                helperText={errors.cnpj && errors.cnpj.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                onBlur={handleCnpjValidator}\r\n                onInput={({ target }) => target.value = cnpjMask(target.value)}\r\n                label=\"CNPJ\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o CNPJ da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"agency_tel\"\r\n                fullWidth\r\n                error={errors.agency_tel && errors.agency_tel.message}\r\n                helperText={errors.agency_tel && errors.agency_tel.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                label=\"Telefone\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o Telefone da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"cep\"\r\n                onBlur={getPostalData}\r\n                onInput={({ target }) => target.value = cepMask(target.value)}\r\n                fullWidth\r\n                error={errors.cep && errors.cep.message}\r\n                helperText={errors.cep && errors.cep.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                label=\"CEP\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o CEP da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"city\"\r\n                fullWidth\r\n                error={errors.city && errors.city.message}\r\n                helperText={errors.city && errors.city.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().city)\r\n                }}\r\n                label=\"Cidade\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira a cidade que a da empresa reside\"\r\n\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"neighborhood\"\r\n                fullWidth\r\n                error={errors.city && errors.city.message}\r\n                helperText={errors.city && errors.city.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().neighborhood)\r\n                }}\r\n                label=\"Bairro\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o bairro que a da empresa reside\"\r\n\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                name=\"address\"\r\n                fullWidth\r\n                error={errors.address && errors.address.message}\r\n                helperText={errors.address && errors.address.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                InputLabelProps={{\r\n                  shrink: Boolean(getValues().address)\r\n                }}\r\n                label=\"Endereço\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o endereço da empresa\"\r\n\r\n              />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <TextField\r\n                name=\"address_number\"\r\n                fullWidth\r\n                error={errors.address_number && errors.address_number.message}\r\n                helperText={errors.address_number && errors.address_number.message}\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n                type=\"number\"\r\n                label=\"Número\"\r\n                variant=\"filled\"\r\n                placeholder=\"Número\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                name=\"address_complement\"\r\n                fullWidth\r\n                error={errors.address_complement && errors.address_complement.message}\r\n                helperText={errors.address_complement && errors.address_complement.message}\r\n                label=\"Complemento\"\r\n                variant=\"filled\"\r\n                placeholder=\"Insira o completo\"\r\n                inputRef={register({\r\n                  required: 'Esse campo é obrigatório'\r\n                })}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Typography variant=\"h6\" component=\"h6\">Informações do Projeto</Typography>\r\n\r\n          <Grid container spacing={2}>\r\n\r\n            <Grid item xs={4}>\r\n              <Autocomplete\r\n                options={qtd_projects}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    name=\"qtdProjects\"\r\n                    inputRef={register({\r\n                      required: 'Esse campo é obrigatório'\r\n                    })}\r\n                    color=\"secondary\"\r\n                    label=\"Quantidade de Projetos\"\r\n                    variant=\"filled\"\r\n                    placeholder=\"Selecione a quantidade\"\r\n                    error={errors.qtdProjects && errors.qtdProjects.message}\r\n                    helperText={errors.qtdProjects && errors.qtdProjects.message}\r\n                  />\r\n                )}\r\n              />\r\n\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <ChipOptions\r\n                name=\"clients\"\r\n                label=\"Insira os nomes dos clientes\"\r\n                error={errors.clients && errors.clients.message}\r\n                register={register({\r\n                  required: 'Esse campo é obrigatório',\r\n                  minLength: {\r\n                    value: 2,\r\n                    message: 'Insira pelo menos um cliente'\r\n                  }\r\n                })}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                id=\"filled-multiline-static\"\r\n                label=\"Observação\"\r\n                multiline\r\n                rows=\"5\"\r\n                error={errors.observation && errors.observation.message}\r\n                fullWidth\r\n                name=\"observation\"\r\n                variant=\"filled\"\r\n                inputRef={register}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <WrapButton>\r\n            <AssociateLegalText>\r\n              Declaro que estou ciente de que todos os projetos inscritos estão passíveis de análise por parte da equipe do Prêmio Aberje 2020\r\n              e que pode ser excluído se estiver em desacordo com o&nbsp;\r\n              <a href=\"http://aberje.com.br/premio/images/pdf/regulamento/regulamento_premio_2020.pdf\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                regulamento\r\n              </a>.\r\n              <Switch\r\n                name=\"agree_terms\"\r\n                label=\"Estou de acordo\"\r\n                register={register}\r\n                required\r\n                error={errors.agree_terms && errors.agree_terms.message}\r\n              />\r\n            </AssociateLegalText>\r\n            <Button variant=\"contained\" type=\"submit\">\r\n              Continuar\r\n            </Button>\r\n          </WrapButton>\r\n          <Snackbar\r\n            open={Boolean(snackbarState.active)}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            autoHideDuration={6000}\r\n            onClose={() => setSnackbarState({ active: false })}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" onClose={() => setSnackbarState({ active: false })} severity={snackbarState.severity}>\r\n              {snackbarState.message}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n        </Form>\r\n      </Flexbox>\r\n    </Background >\r\n  )\r\n}\r\n\r\nexport default Agency","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  box-sizing: border-box;\r\n  height: inherit;\r\n  width: 95%;\r\n  display: block;\r\n  margin: 10px auto;\r\n`;\r\nexport const Title = styled.h1`\r\n  font-size: 22px;  \r\n  color:#fc9b44;\r\n  margin: 2vw 0;\r\n  text-align: center;\r\n`;\r\nexport const Group = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: center;\r\n  min-height: calc(100vh - 200px);\r\n`\r\nexport const WrapperChoices = styled.div`\r\n  display: flex;\r\n  width: 50%;\r\n  justify-content: space-between;\r\n`\r\n\r\nexport const StyledButtonSearch = styled.button`\r\n  padding: 10px;\r\n  background-color: #6f0000;\r\n  color: #fc9b44;\r\n  `\r\nexport const GroupButton = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n`;","import React, { useEffect } from \"react\"\r\nimport { useStoreState, useStoreActions } from 'easy-peasy'\r\n// import { makeStyles } from '@material-ui/core/styles'\r\nimport ViewListIcon from '@material-ui/icons/ViewList'\r\nimport Alert from '@material-ui/lab/Alert'\r\n\r\nimport Tables from './../../components/material/Tables'\r\n\r\nimport { IfElse } from '../../components/If'\r\n\r\nimport { Container, Group, Background } from './style'\r\n\r\n\r\nconst headCells = [\r\n  { id: 'name_agency', numeric: false, disablePadding: false, label: 'Razão Social' },\r\n  { id: 'agency_fancy', numeric: false, disablePadding: false, label: 'Nome Fantasia' },\r\n  { id: 'cnpj', numeric: false, disablePadding: false, label: 'CNPJ' },\r\n  { id: 'aberje_associate', numeric: false, disablePadding: false, label: 'Assoc.' },\r\n  { id: 'cep', numeric: false, disablePadding: false, label: 'CEP' },\r\n  { id: 'address', numeric: false, disablePadding: false, label: 'Endereço' },\r\n  { id: 'address_complement', numeric: false, disablePadding: false, label: 'Compl.' },\r\n  { id: 'neighborhood', numeric: false, disablePadding: false, label: 'Bairro' },\r\n  { id: 'city', numeric: false, disablePadding: false, label: 'Cidade' },\r\n  { id: 'qtd_projects', numeric: true, disablePadding: false, label: 'Projetos' },\r\n  { id: 'clients', numeric: false, disablePadding: false, label: 'Clientes' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: 'Resp.' },\r\n  { id: 'email', numeric: false, disablePadding: false, label: 'Email' },\r\n  { id: 'phone', numeric: false, disablePadding: false, label: 'Cel' },\r\n  { id: 'observation', numeric: false, disablePadding: false, label: 'Obs.' },\r\n];\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     width: '50%',\r\n//     '& > * + *': {\r\n//       marginTop: theme.spacing(3),\r\n//     },\r\n//   },\r\n// }));\r\n\r\nconst AgenciesList = () => {\r\n  const agencies = useStoreState(state => state.agency.agencies)\r\n  const getAllAgencies = useStoreActions(actions => actions.agency.getAllAgencyUsers)\r\n\r\n  useEffect(() => {\r\n    getAllAgencies()\r\n  }, [getAllAgencies])\r\n\r\n  const clearList = agencies\r\n    .map(agency => ({\r\n      id: agency.agency_id,\r\n      name_agency: agency.agency_name,\r\n      agency_fancy: agency.agency_fancy,\r\n      cnpj: agency.cnpj,\r\n      name: agency.name,\r\n      clients: agency.clients,\r\n      email: agency.email,\r\n      phone: agency.phone,\r\n      observation: agency.observation,\r\n      qtd_projects: agency.qtd_projects,\r\n      aberje_associate: agency.aberje_associate === true ? 'Sim' : 'Não',\r\n      address: agency.address,\r\n      cep: agency.cep,\r\n      neighborhood: agency.neighborhood,\r\n      address_complement: agency.address_complement,\r\n      city: agency.city,\r\n    }))\r\n\r\n\r\n\r\n  const filterClearList = clearList.filter((agency) => {\r\n    return agency.id !== undefined\r\n  })\r\n\r\n  return (\r\n    <Background className=\"container clearfix et_menu_container\">\r\n      <Container>\r\n        <Group>\r\n          <IfElse\r\n            condition={\r\n              typeof agencies !== 'undefined' && agencies.length > 0\r\n            }\r\n            True={\r\n\r\n              <Tables\r\n                title=\"Agências\"\r\n                headCells={headCells}\r\n                list={filterClearList}\r\n                actions={[\r\n                  {\r\n                    action: '/listagem/projetos/',\r\n                    btn: <ViewListIcon />,\r\n                    type: 'link', // link or btn\r\n                    tooltip: 'Ver lista de projetos postados'\r\n                  },\r\n\r\n                ]}\r\n              />\r\n\r\n            }\r\n            False={\r\n              <Alert severity=\"warning\">Não há projetos cadastrados</Alert>\r\n            }\r\n          />\r\n        </Group>\r\n      </Container>\r\n    </Background>\r\n  )\r\n}\r\n\r\nexport default AgenciesList\r\n","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\n\r\nconst FormText = ({ name, error, value, register, label, rows, type, onChange }) => (\r\n  <TextField\r\n    name={name}\r\n    type={type}\r\n    fullWidth\r\n    onChange={onChange}\r\n    multiline={rows}\r\n    rows={rows}\r\n    defaultValue={value}\r\n    error={error}\r\n    helperText={error}\r\n    inputRef={register}\r\n    label={label}\r\n    variant=\"filled\"\r\n  />\r\n)\r\n\r\nexport default FormText","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActions from '@material-ui/core/CardActions'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Title from '../Title'\r\nimport Text from '../Text'\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return ({\r\n    root: {\r\n      minWidth: 275,\r\n      minHeight: 232,\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'space-between',\r\n      background: theme.palette.primary.light,\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n      color: theme.palette.primary.contrastText\r\n    },\r\n  })\r\n});\r\nconst StyledText = styled.div`\r\ndisplay: block;\r\n  display: -webkit-box;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  font-size: 14px;\r\n  line-height: 1;\r\n  -webkit-line-clamp: 4;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nfunction CardProject({ id, projectTitle, enterpriseName, projectDescription, location }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12} md={4}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <CardContent >\r\n          <Text className={classes.title} color=\"textSecondary\" gutterBottom>\r\n            {enterpriseName}\r\n          </Text>\r\n          <Title color=\"secondary\" size=\"sm\">\r\n            {projectTitle}\r\n          </Title>\r\n          <Text className={classes.pos} color=\"textSecondary\">\r\n            {location}\r\n          </Text>\r\n          <StyledText>\r\n            <Text color=\"textPrimary\">\r\n              {projectDescription}\r\n            </Text>\r\n          </StyledText>\r\n        </CardContent>\r\n        <CardActions>\r\n          <Link to={`/vaga/${id}`}>\r\n            <Button size=\"small\">Detalhe do Projeto</Button>\r\n          </Link>\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CardProject","import React, { useEffect, useState } from \"react\"\r\nimport { useStoreState, useStoreActions } from 'easy-peasy'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Title from '../../components/material/Title'\r\nimport Button from '../../components/material/Button'\r\nimport FormText from '../../components/material/FormText'\r\nimport CardProject from '../../components/material/CardProject'\r\n\r\nconst AllProjects = ({ match }) => {\r\n  const projects = useStoreState(state => state.project.projects)\r\n  const getProject = useStoreActions(actions => actions.project.getAllProjects)\r\n  const [projectList, setProjects] = useState([])\r\n  const [projectFullList, setFullProjects] = useState([])\r\n\r\n  useEffect(() => {\r\n    const setProjectsState = async () => {\r\n      const projects = await getProject(match.params.id)\r\n      projectList.length === 0 && setProjects(projects.data)\r\n      setFullProjects(projects.data)\r\n    };\r\n    setProjectsState()\r\n  }, [getProject, projectList.length, match.params.id, projects])\r\n\r\n  const handleText = event => {\r\n    const lowerText = event.target.value.toLowerCase()\r\n    const filterProjects = projectList.filter(project => project.title.toLowerCase().startsWith(lowerText))\r\n\r\n    !lowerText || lowerText === \"\" ? setProjects(projectFullList) : setProjects(filterProjects)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title style={{ margin: '30px 0' }}>Todas as vagas</Title>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <a href=\"/dashboard/profissional\">\r\n            <Button\r\n              variant=\"contained\"\r\n            >Voltar</Button>\r\n          </a>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormText\r\n            label=\"Pesquisar por projeto\"\r\n            onChange={e => handleText(e)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container spacing={2}>\r\n        {\r\n          projectList.length > 0 ?\r\n            (projectList.map(project => (\r\n              <CardProject\r\n                key={project._id}\r\n                id={project._id}\r\n                enterpriseName={project.enterprise_name || \"Confidencial\"}\r\n                projectTitle={project.title}\r\n                location={project.location}\r\n                projectDescription={project.requirements}\r\n              />\r\n            ))) :\r\n            <Grid item xs={12}>\r\n              <Alert variant=\"filled\" severity=\"warning\">Desculpe! Não encontramos vagas</Alert>\r\n            </Grid>\r\n        }\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AllProjects\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Container = styled.ul`\r\n  margin-top: 20px;\r\n  padding: 0;\r\n  li {\r\n    display: flex;\r\n    align-items: center;\r\n    color: #444;\r\n    justify-content: end;\r\n    & + li {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FileInfo = styled.div`\r\n  display: flex;\r\n  margin-left: 10px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 5px;\r\n  border-radius: 4px;\r\n  color: black;\r\n  ${({ completed, error }) =>\r\n    error ? css`background-color: red; color: white;` :\r\n      completed && css`background-color: green; color: white;`\r\n  }}\r\n    strong {\r\n      color: inherit;\r\n    }\r\n    span {\r\n      font-size: 12px;\r\n      color: inherit;\r\n      margin-top: 5px;\r\n    }\r\n\r\n  .delete-button {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const Preview = styled.div`\r\n  width: 36px;\r\n  height: 36px;\r\n  border-radius: 5px;\r\n  background-image: url(${props => props.src});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: 50% 50%;\r\n  margin-right: 10px;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Container, FileInfo, } from \"./styles\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst FileList = ({ files, handleDelete }) => (\r\n  <Container>\r\n    <li >\r\n      {files.map((file) => (\r\n        <>\r\n          <FileInfo key={file.name} completed={file.uploaded} error={file.error}>\r\n            <strong>{file.name}</strong>\r\n            <span>{!file.uploaded ? 'Carregando...' : 'Upload concluído'}</span>\r\n            <IconButton aria-label=\"delete\" className=\"delete-button\" onClick={() => handleDelete(file.id)} disabled={!file.uploaded}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </FileInfo>\r\n        </>\r\n      ))}\r\n    </li>\r\n  </Container>\r\n);\r\n\r\nexport default FileList;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst dragActive = css`\r\n  border-color: #78e5d5;\r\n`;\r\n\r\nconst dragReject = css`\r\n  border-color: #e57878;\r\n`;\r\n\r\nexport const DropContainer = styled.div.attrs({\r\n  className: \"dropzone\"\r\n})`\r\n  border: 1px dashed #ddd;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: height 0.2s ease;\r\n  background: white;\r\n  width: 100%;\r\n  ${props => props.isDragActive && dragActive};\r\n  ${props => props.isDragReject && dragReject};\r\n`;\r\n\r\nconst messageColors = {\r\n  default: \"#999\",\r\n  error: \"#e57878\",\r\n  success: \"#78e5d5\"\r\n};\r\n\r\nexport const UploadMessage = styled.p`\r\n  display: flex;\r\n  color: ${props => messageColors[props.type || \"default\"]};\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 15px 0;\r\n`;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nimport { DropContainer, UploadMessage } from \"./styles\";\r\n\r\nexport default class Upload extends Component {\r\n  renderDragMessage = (isDragActive, isDragReject) => {\r\n    if (!isDragActive) {\r\n    return <UploadMessage>{this.props.label || \"Anexar arquivos do projeto\"}</UploadMessage>;\r\n    }\r\n\r\n    if (isDragReject) {\r\n      return <UploadMessage type=\"error\">Arquivo não suportado</UploadMessage>;\r\n    }\r\n\r\n    return <UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>;\r\n  };\r\n\r\n  render() {\r\n    const { onUpload, filesAccepted } = this.props;\r\n\r\n    return (\r\n      <Dropzone accept={filesAccepted || \".mp4, .mov, .pdf, .doc, .docx\"} onDropAccepted={onUpload}>\r\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }) => (\r\n          <DropContainer\r\n            {...getRootProps()}\r\n            isDragActive={isDragActive}\r\n            isDragReject={isDragReject}\r\n          >\r\n            <input {...getInputProps()} />\r\n            {this.renderDragMessage(isDragActive, isDragReject)}\r\n          </DropContainer>\r\n        )}\r\n      </Dropzone>\r\n    );\r\n  }\r\n}\r\n\r\n// export default Upload;","import AWS from 'aws-sdk';\r\n\r\nconst accessKeyId = process.env.REACT_APP_AWS_ACCESS_KEY;\r\nconst secretAccessKey = process.env.REACT_APP_AWS_SECRET_ACCESS_KEY;\r\nconst s3 = new AWS.S3({\r\n    accessKeyId,\r\n    secretAccessKey\r\n});\r\n\r\nexport default s3;","import React, { useState } from \"react\"\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Switch from '../../components/material/Switch'\r\nimport { Error } from '../../components/Status'\r\n\r\nimport FileList from '../../components/FileList'\r\n\r\nimport Upload from '../../components/Upload'\r\n\r\nimport {\r\n  project_category,\r\n  project_region,\r\n  region_choice\r\n} from '../Signup/dicioFields'\r\nimport Button from '../../components/material/Button'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport { Container, SubTitle } from './style';\r\nimport { phoneMask } from '../../utils/masks';\r\nimport s3 from '../../aws-config';\r\nimport history from \"../../history\"\r\nimport { mountFileObj } from \"../../utils/service\"\r\n\r\nconst Project = ({ location }) => {\r\n  const {\r\n    register, handleSubmit, errors, setError,\r\n    watch\r\n  } = useForm()\r\n\r\n  const enterpriseId = location?.state?.enterprise_id;\r\n  const registerProject = useStoreActions(actions => actions.project.registerProject)\r\n\r\n  const [charactersCount, setCharactersCount] = useState(0)\r\n  const [files, setFiles] = useState([])\r\n  const [authorizationLetter, setAuthorizationLetter] = useState([]);\r\n  const [signatureFile, setSignatureFile] = useState([]);\r\n  const [modalStatus, setModalStatus] = useState(false)\r\n  const [draft, setDraft] = useState(false);\r\n  \r\n  const [projectCreatorIndex, setProjectCreatorIndex] = useState(0);\r\n  const [projectCreators, setProjectCreators] = useState([]);\r\n\r\n  const registerError = useStoreState(state => state.project.error)\r\n  const userType = useStoreState(state => state.auth.auth.user)\r\n  const typeOfUser = userType.type === \"enterprise\" ? \"empresa\" : \"agencia\";\r\n\r\n  const onSubmit = data => {\r\n    if (!data.agree) {\r\n      return setError('agree', 'notMatch', 'Este campo é obrigatório')\r\n    }\r\n    \r\n    if (!draft && !signatureFile.length) {\r\n      return alert('Você precisa inserir uma assinatura digital.')\r\n    }\r\n\r\n    if (!draft && !authorizationLetter.length && typeOfUser === \"agencia\") {\r\n      return alert('Você precisa inserir uma carta de autorização.')\r\n    }\r\n\r\n    const filesArray = files.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload dos arquivos')\r\n        return false;\r\n      }\r\n      return { ...file };\r\n    });\r\n\r\n    const signaturesArray = signatureFile.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload da assinatura digital.')\r\n        return false;\r\n      }\r\n      return { ...file, signature: true, };\r\n    });\r\n\r\n    const authorizationLetterFile = userType.type === \"agency\" ? authorizationLetter.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload da carta de autorização')\r\n        return false;\r\n      }\r\n      return { ...file, authorizationLetter: true };\r\n    }) : [];\r\n\r\n    const hasOthersContacts = data.others_contacts.some(({ name, email, tel }) => name || email || tel)\r\n    const formatted = {\r\n      enterprise_id: enterpriseId || userType.id,\r\n      ...data,\r\n      ...(hasOthersContacts && { others_contacts: data.others_contacts }),\r\n      attachment: [...filesArray, ...signaturesArray, ...authorizationLetterFile]\r\n    }\r\n\r\n    if(draft) {\r\n      return registerProject({ ...formatted, type: userType.type })\r\n        .then(() => history.push(`/dashboard/${typeOfUser}`))\r\n        .catch(() => alert('Ocorreu um erro ao registrar o projeto, tente novamente.'))\r\n    }\r\n\r\n    const confirmMessage = 'Ao finalizar este projeto entenderemos que ele já está disponibilizado para análise e, portanto, não poderá mais ser editado. Caso necessite uma alteração após a finalização, entre em contato com a administração do prêmio pelo email mirella@aberje.com.br , lembrando que alterações posteriores incorrem em um decréscimo em sua pontuação, conforme o regulamento do Prêmio ABERJE 2020';\r\n    \r\n    if(window.confirm(confirmMessage)){\r\n      registerProject({ ...formatted, draft: false, complet_project: true })\r\n        .then(() => history.push(`/dashboard/${typeOfUser}`))\r\n        .catch(() => alert('Ocorreu um erro ao registrar o projeto, tente novamente.'))\r\n      return;\r\n    }\r\n\r\n  }\r\n  \r\n  const handleDeleteAuthorizationLetter = (id) => {\r\n    return setAuthorizationLetter((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const handleDeleteSignatures = (id) => {\r\n    return setSignatureFile((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const handleDeleteFiles = (id) => {\r\n    return setFiles((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const uploadAuthorizationLetter = ([file]) => {\r\n    if(authorizationLetter.length){\r\n      return alert('Você já anexou uma carta de autorização.');\r\n    }\r\n\r\n    const maxSize = 3 * 1024 * 1024;\r\n\r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande');\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setAuthorizationLetter(state => state.map((file) => ({ ...file, error: true })))\r\n        return false;\r\n      };\r\n      if(data) {\r\n        setAuthorizationLetter(state => state.map((file) => ({ ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true })))\r\n      }\r\n    });\r\n    setAuthorizationLetter(state => [...state, { ...fileObj, }])\r\n\r\n  }\r\n\r\n  const onUploadSignature = ([file]) => {\r\n    if(signatureFile.length >= 3){\r\n      return alert('Limite máximo de 3 assinaturas');\r\n    }\r\n\r\n    const maxSize = 3 * 1024 * 1024;\r\n\r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande')\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setSignatureFile(state => state.map((file) => ({ ...file, error: true })))\r\n        return false;\r\n      };\r\n      if(data) {\r\n        setSignatureFile(state => state.map((file) => ({ ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true })))\r\n      }\r\n    });\r\n    setSignatureFile(state => [...state, { ...fileObj, }])\r\n  };\r\n\r\n\r\n  const uploadFiles = ([file]) => {\r\n    // total of unique file\r\n    const maxSize = 50 * 1024 * 1024;\r\n    // total of all files together\r\n    const totalMaxFile = 100 * 1024 * 1024;\r\n    \r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande')\r\n    }\r\n\r\n    const fileSizes = files.map(({ size }) => size).reduce((accumulator, val) =>  accumulator + val, 1) + file.size;\r\n\r\n    if(totalMaxFile < fileSizes) {\r\n      return alert('Os seus arquivos excederam o limite máximo de 100mb');\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n  \r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setFiles(state => state.map((file) => file.id === fileObj.id ? { ...file, error: true } : { ...file }))\r\n        return false;\r\n      };\r\n      if (data) {\r\n        setFiles(state => state.map((file) => file.id === fileObj.id ? { ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true } : { ...file }))\r\n      }\r\n    });\r\n    setFiles(state => [...state, { ...fileObj, }])\r\n  }\r\n\r\n  const addProjectCreator = (index) => {\r\n    if(projectCreators.length >= 20) return false;\r\n    setProjectCreatorIndex((index) => index + 1);\r\n    const inputProps = [\r\n      {\r\n        name: `project_creators[${index}].agency_name`,\r\n        fullWidth: true,\r\n        label: \"Razão Social\",\r\n        placeholder: \"Insira a razão social\",\r\n        inputRef: register,\r\n        variant: \"filled\",\r\n        key: index,\r\n      },\r\n      {\r\n        name: `project_creators[${index}].agency_fancy`,\r\n        fullWidth: true,\r\n        label: \"Nome Fantasia\",\r\n        placeholder: \"Insira o nome fantasia\",\r\n        inputRef: register,\r\n        variant: \"filled\",\r\n        key: index,\r\n      }\r\n    ]\r\n\r\n    setProjectCreators((state) => state.concat(inputProps));\r\n  }\r\n\r\n  const removeProjectCreatorsFields = (key) => {\r\n    setProjectCreators((state) => state.filter((project) => project.key !== key));\r\n    setProjectCreatorIndex((index) => index - 1);\r\n  };\r\n\r\n  const agreeState = watch('agree');\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: 1024, margin: '0 auto' }}>\r\n        <Typography variant=\"h2\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n          Ficha de identificação\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"title\"\r\n              fullWidth\r\n              error={errors.title && errors.title.message}\r\n              helperText={errors.title && errors.title.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório'\r\n              })}\r\n              label=\"Nome do Projeto\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"total_period\"\r\n              type=\"date\"\r\n              fullWidth\r\n              error={errors.total_period && errors.total_period.message}\r\n              helperText={errors.total_period && errors.total_period.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n                pattern: {\r\n                  message: 'Data inválida'\r\n                }\r\n              })}\r\n              inputProps={{\r\n                min: '2019-01-01',\r\n                max: '2020-08-31',\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              label=\"Período do Projeto\"\r\n              placeholder=\"Período em que o projeto foi desenvolvido dentro do tempo estipulado\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"project_about\"\r\n              fullWidth\r\n              multiline\r\n              rows=\"5\"\r\n              error={errors.project_about && errors.project_about.message}\r\n              helperText={errors.project_about && errors.project_about.message}\r\n              inputRef={register}\r\n              inputProps={{\r\n                maxLength: 900\r\n              }}\r\n              onChange={({ target }) => setCharactersCount(target.value.length)}\r\n              label=\"Resumo sobre o projeto\"\r\n              variant=\"filled\"\r\n            />\r\n            <p style={{ width: '100%', textAlign: 'right', color: charactersCount > 850 && 'red' }}>{charactersCount}/900</p>\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Categoria em que o Projeto ocorre\r\n        </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={project_category}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"category\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Categoria\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Selecione a categoria\"\r\n                  error={errors.project_category && errors.project_category.message}\r\n                  helperText={errors.project_category && errors.project_category.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"category_about\"\r\n              fullWidth\r\n              multiline\r\n              rows=\"5\"\r\n              error={errors.category_about && errors.category_about.message}\r\n              helperText={errors.category_about && errors.category_about.message}\r\n              inputRef={register}\r\n              inputProps={{\r\n                maxLength: 500\r\n              }}\r\n              label=\"Escreva o porquê da escolha da categoria\"\r\n              variant=\"filled\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={project_region.sort()}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"project_region\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Região\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Escolha a região\"\r\n                  error={errors.project_region && errors.project_region.message}\r\n                  helperText={errors.project_region && errors.project_region.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={region_choice.sort()}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"region_choice\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Escolha abaixo uma das opções do porquê da escolha da região\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Digite sua Região\"\r\n                  error={errors.region_choice && errors.region_choice.message}\r\n                  helperText={errors.region_choice && errors.region_choice.message}\r\n                />\r\n              )}\r\n            />\r\n            <p>\r\n              com base nos critérios dos itens III.7 e III.7.1 do regulamento\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <p>Abaixo insira <b>todos</b> os arquivos do seu projeto. As extensões permitidas são: <b>.PDF, .DOC, .DOCX, .MP4 e .MOV  </b></p>\r\n              <p>\r\n              A soma de todos os seus arquivos enviados não deve ultrapassar <b>100 megas</b>, o arquivo de vídeo case (sozinho) pode chegar até <b>50 megas</b>, se estiver maior,\r\n              envie uma versão com menor qualidade, ela servirá somente para a análise do conteúdo do projeto. Caso o seu trabalho venha a ser classificado, vencedor regional,\r\n              será solicitada uma cópia em alta resolução para exibição.\r\n              </p>\r\n              <p>\r\n                Clique no box branco abaixo ou arraste os arquivos para fazer upload.\r\n              </p>\r\n              <Upload onUpload={uploadFiles} />\r\n            </div>\r\n            <FileList files={files} handleDelete={handleDeleteFiles} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Agência, assessoria, produta responsável pela criação e/ou produção do trabalho.\r\n            </Typography>\r\n            <div style={{ margin: '10px 0px', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n                <div style={{ width: \"100%\", textAlign: 'center' }}>\r\n                  <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  endIcon={<AddCircleIcon />}\r\n                  onClick={() => addProjectCreator(projectCreatorIndex)}\r\n                  disabled={projectCreators.length >= 20}\r\n                >\r\n                  Adicionar\r\n                </Button>\r\n                </div>\r\n            </div>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  name=\"project_creators[0].agency_name\"\r\n                  fullWidth\r\n                  label=\"Razão Social\"\r\n                  placeholder=\"Insira a razão social\"\r\n                  inputRef={register}\r\n                  variant=\"filled\"\r\n                />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    name=\"project_creators[0].agency_fancy\"\r\n                    fullWidth\r\n                    label=\"Nome Fantasia\"\r\n                    placeholder=\"Insira o nome fantasia\"\r\n                    inputRef={register}\r\n                    variant=\"filled\"\r\n                  />\r\n                </Grid>\r\n              {projectCreators.map((inputProps, index) => {\r\n                const renderRemoveButton = index > 0 && index % 2 === 1;\r\n                return (\r\n                    <Grid item xs={6} style={{ position: \"relative\" }}>\r\n                      <TextField {...inputProps}/>\r\n                      {renderRemoveButton && (\r\n                        <div style={{ width: '100%', textAlign: 'right' }}>\r\n                           <Button\r\n                            color=\"secondary\"\r\n                            onClick={(e) => {\r\n                            e.preventDefault();\r\n                            removeProjectCreatorsFields(inputProps.key)\r\n                            }}>\r\n                            Remover\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                    </Grid>\r\n                )\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n            <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Outros Contatos\r\n            </Typography>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].name\"\r\n                  inputRef={register({\r\n                    required: 'Esse campo é obrigatório'\r\n                  })}\r\n                  error={errors?.others_contacts?.[0]?.name}\r\n                  helperText={errors?.others_contacts?.[0]?.name && errors?.others_contacts[0]?.name.message}\r\n                  fullWidth\r\n                  label=\"Nome Completo\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].email\"\r\n                  inputRef={register({\r\n                    required: 'Esse campo é obrigatório'\r\n                  })}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  variant=\"filled\"\r\n                  error={errors?.others_contacts?.[0]?.email}\r\n                  helperText={errors?.others_contacts?.[0]?.email && errors?.others_contacts[0]?.email.message}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].tel\"\r\n                  inputRef={register({\r\n                    required: 'Esse campo é obrigatório'\r\n                  })}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  label=\"Telefone\"\r\n                  variant=\"filled\"\r\n                  onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                  error={errors?.others_contacts?.[0]?.tel}\r\n                  helperText={errors?.others_contacts?.[0]?.tel && errors?.others_contacts[0]?.tel.message}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[2].name\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  label=\"Nome\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[2].email\"\r\n                  inputRef={register}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  label=\"E-mail\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[2].tel\"\r\n                  inputRef={register}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  label=\"Telefone\"\r\n                  variant=\"filled\"\r\n                  onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].name\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  label=\"Nome\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].email\"\r\n                  inputRef={register}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  label=\"E-mail\"\r\n                  variant=\"filled\"\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].tel\"\r\n                  inputRef={register}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  label=\"Telefone\"\r\n                  variant=\"filled\"\r\n                  onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Assinatura Digital\r\n            </Typography>\r\n            <div>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Suba a imagem de sua assinatura digital, se estiver cadastrado como agência, também é obrigatório o envio de uma carta de autorização.\r\n                <b>Tamanho máximo 3mb</b>\r\n              </p>\r\n              <Upload onUpload={onUploadSignature} filesAccepted=\".jpg, .jpeg, .png, .doc\" label=\"Anexar assinatura digital\" />\r\n            </div>\r\n            <FileList files={signatureFile} handleDelete={handleDeleteSignatures} />\r\n          </Grid>\r\n          {userType.type === \"agency\" && (\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n                Carta de autorização.\r\n              </Typography>\r\n              <div>\r\n                <p style={{ textAlign: 'center' }}>\r\n                  Você como agência, envie a carta de autorização conforme o <a href=\"http://www.aberje.com.br/premio/opremio.html\" target=\"_blank\" rel=\"noopener noreferrer\">regulamento.</a>\r\n                  <b>Tamanho máximo de 3mb.</b>\r\n                </p>\r\n                <Upload onUpload={uploadAuthorizationLetter} filesAccepted=\".jpg, .jpeg, .png, .doc\" label=\"Anexar carta de autorização\" />\r\n              </div>\r\n              <FileList files={authorizationLetter} handleDelete={handleDeleteAuthorizationLetter} />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ fontWeight: 'bold' }}>\r\n              {userType.type === \"enterprise\" ? (\r\n                'Atestamos a veracidade das informações apresentadas pela nossa organização inscrita no Prêmio Aberje 2020.'\r\n              ) : (\r\n                'Atestamos a veracidade das informações apresentadas pela nossa agência inscrita no Prêmio Aberje 2020.'\r\n              )}\r\n            </Typography>\r\n            <SubTitle>\r\n             {userType.type === \"enterprise\" ? (\r\n               'Autorizamos a publicação, na íntegra ou em parte, do trabalho inscrito no Prêmio Aberje 2020, em quaisquer veículos de comunicação de responsabilidades direta da Aberje.'\r\n             ) : (\r\n               'Autorizamos a publicação, na íntegra ou em parte, do trabalho inscrito no Prêmio Aberje 2020, em quaisquer veículos de comunicação de responsabilidades direta da Aberje. Os trabalhos inscritos por assessorias, agências ou profissionais autônomos externos declaram possuir autorização da empresa cliente para participar do Prêmio Aberje 2019, essa autorização deverá ser entregue juntamente com o trabalho.'\r\n             )}\r\n            </SubTitle>\r\n            {userType.type === \"agency\" && (\r\n              <SubTitle>\r\n                Declaramos contar com autorização assinada pela empresa cliente para inscrever este trabalho no Prêmio Aberje 2020 e nos comprometemos a enviá-la,\r\n                em versão digital à Aberje, juntamente com o arquivo eletrônico do trabalho.\r\n              </SubTitle>\r\n            )}\r\n            <Switch\r\n              name=\"agree\"\r\n              label=\"Estou de acordo\"\r\n              register={register}\r\n              error={errors.agree && errors.agree.message}\r\n              required\r\n            />\r\n            {agreeState && (\r\n              <p>Acesse o regulamento em: <a href=\"http://www.aberje.com.br/premio/opremio.html\" target=\"_blank\" rel=\"noopener noreferrer\">regulamento</a></p>\r\n            )}\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Error msg={registerError && registerError.project} />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" styles={{ marginRight: 10 }} onClick={() => setDraft(true)}>\r\n          Salvar como rascunho\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"contained\">\r\n              Finalizar projeto\r\n        </Button>\r\n      </form>\r\n\r\n      <Snackbar open={modalStatus} autoHideDuration={6000} onClose={() => setModalStatus(false)}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setModalStatus(false)} severity=\"success\">\r\n          Projeto cadastrado com sucesso!\r\n          </Alert>\r\n      </Snackbar>\r\n    </Container >\r\n  )\r\n}\r\n\r\nexport default Project;","import styled from 'styled-components';\r\n\r\nexport const FullWidth = styled.div`\r\n  width: 100%;\r\n  padding: 40px;\r\n`\r\n\r\nexport const InputWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n`\r\n\r\nexport const Background = styled.div`\r\n  height: calc(100vh - 200px);\r\n\r\n  button[type='submit'] {\r\n    display: block;\r\n    width: 100%;\r\n  }\r\n\r\n  h2 {\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const Title = styled.h3`\r\n  color:#000;\r\n  font-size: 40px;\r\n`\r\n\r\nexport const FormStyled = styled.form`\r\nwidth: 50%;\r\n@media(max-width:650px){\r\n  width: 100%;\r\n}\r\n`","import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions } from 'easy-peasy'\r\nimport Email from '@material-ui/icons/Mail'\r\nimport Container from '@material-ui/core/Container'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FilledInput from '@material-ui/core/FilledInput'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Button from './../../components/material/Button'\r\nimport Title from './../../components/material/Title'\r\n\r\n\r\nimport {\r\n  FormStyled\r\n} from './style';\r\n\r\nimport { emailValidation } from '../../utils/service'\r\nimport history from '../../history'\r\n\r\nconst EsqueciSenha = () => {\r\n  const { register, handleSubmit, errors } = useForm()\r\n  const [modalState, setModalState] = useState({ active: false, severity: null })\r\n  const [modalMsg, setModalMsg] = useState('')\r\n  const forgotPassword = useStoreActions(actions => actions.user.forgotPassword)\r\n\r\n  const onSubmit = async (data) => {\r\n    forgotPassword(data)\r\n      .then(({ data }) => {\r\n          setModalMsg(data.message)\r\n          setModalState({\r\n            active: true,\r\n            severity: 'success'\r\n          })\r\n          return true;\r\n      }).catch((err) => {\r\n        const hasErrors = err.errors && err.errors.message;\r\n        setModalMsg(hasErrors || \"Ocorreu um erro ao enviar o e-mail de recuperação, tente novamente\")\r\n        setModalState({\r\n          active: true,\r\n          severity: 'error'\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      center\r\n      style={{\r\n        height: 'calc(100vh - 107px)',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n      }}\r\n    >\r\n      <Grid container alignItems=\"stretch\" justify=\"center\">\r\n        <FormStyled onSubmit={handleSubmit(onSubmit)}>\r\n          <Title style={{ textAlign: 'center', fontSize: 20 }}>\r\n            Insira seu email para recuperar a senha\r\n          </Title>\r\n          <FormControl fullWidth style={{ margin: '10px 0' }} variant=\"filled\">\r\n            <InputLabel htmlFor=\"filled-adornment-password\">E-mail</InputLabel>\r\n            <FilledInput\r\n              id=\"filled-adornment-password\"\r\n              type=\"text\"\r\n              name=\"email\"\r\n              error={errors.email}\r\n              inputRef={register({\r\n                required: 'Esse campo é obrigatório',\r\n                pattern: {\r\n                  value: emailValidation(),\r\n                  message: 'Insira um endereço de e-mail válido'\r\n                }\r\n              })}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <Email color=\"primary\" />\r\n                </InputAdornment>\r\n              }\r\n            />\r\n            {errors.email && (<FormHelperText error>{errors.email.message}</FormHelperText>)}\r\n          </FormControl>\r\n\r\n\r\n          <Button variant=\"contained\" type=\"submit\" style={{ marginTop: '10px' }}>\r\n            Recuperar\r\n          </Button>\r\n        </FormStyled>\r\n      </Grid>\r\n      <Snackbar open={modalState.active} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} autoHideDuration={5000} onClose={() => {\r\n        setModalState({ active: false })\r\n        return history.push('/')\r\n      }}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setModalState({\r\n          active: false\r\n        })} severity={modalState.severity}>\r\n          {modalMsg}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container>\r\n  )\r\n}\r\n\r\n\r\nexport default EsqueciSenha","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport { Grid, FormControl, InputLabel, FilledInput, InputAdornment, FormHelperText, Button, Snackbar } from '@material-ui/core';\r\nimport { FormStyled } from '../EsqueciSenha/style';\r\nimport Senha from '@material-ui/icons/Lock'\r\nimport Title from '../../components/material/Title';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useParams } from 'react-router';\r\nimport { useStoreActions } from 'easy-peasy';\r\nimport history from '../../history';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst RedefinirAsenha = () => {\r\n    const [modalState, setModalState] = useState({ active: false, severity: null })\r\n    const [modalMsg, setModalMsg] = useState('')\r\n    const { register, handleSubmit, getValues, errors } = useForm()\r\n    const { token } = useParams()\r\n    const resetPassword = useStoreActions(actions => actions.user.resetPassword)\r\n    const onSubmit = async (data) => {\r\n        const response = await resetPassword({ ...data, token });\r\n        if (response.data && response.status === 200) {\r\n            setModalState({\r\n                active: true,\r\n                severity: 'success'\r\n            })\r\n            setModalMsg(response.data.message)\r\n            setTimeout(() => {\r\n                return history.push('/')\r\n            }, 3000);\r\n            return;\r\n        }\r\n        setModalState({ active: true, severity: 'error' })\r\n        setModalMsg(response.payload.resetPassword || 'Um erro ocorreu ao enviar o código de restauração');\r\n        return;\r\n    };\r\n\r\n    if (!token) {\r\n        return history.push('/')\r\n    };\r\n\r\n    return (\r\n        <Container\r\n            center\r\n            style={{\r\n                height: 'calc(100vh - 107px)',\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n            }}\r\n        >\r\n            <Grid container alignItems=\"stretch\" justify=\"center\">\r\n                <FormStyled onSubmit={handleSubmit(onSubmit)}>\r\n                    <Title style={{ textAlign: 'center', fontSize: 24, marginBottom: 25 }}>\r\n                        Redefinir a senha\r\n                    </Title>\r\n                    <FormControl fullWidth style={{ margin: '10px 0' }} variant=\"filled\">\r\n                        <InputLabel htmlFor=\"filled-adornment-new-password\">Insira sua nova senha</InputLabel>\r\n                        <FilledInput\r\n                            id=\"filled-adornment-new-password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            error={errors.password}\r\n                            inputRef={register({\r\n                                required: 'Este campo é obrigatório',\r\n                                pattern: {\r\n                                    message: 'Insira uma senha válida'\r\n                                },\r\n                                minLength: {\r\n                                    value: 6,\r\n                                    message: 'A senha precisa ter no mínimo 6 caracteres'\r\n                                }\r\n                            })}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <Senha color=\"primary\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {errors.password && (<FormHelperText error>{errors.password.message}</FormHelperText>)}\r\n                    </FormControl>\r\n                    <FormControl fullWidth style={{ margin: '10px 0' }} variant=\"filled\">\r\n                        <InputLabel htmlFor=\"filled-adornment-confirm-new-password\">Confirme a nova senha</InputLabel>\r\n                        <FilledInput\r\n                            id=\"filled-adornment-confirm-new-password\"\r\n                            type=\"password\"\r\n                            name=\"confirmedPassword\"\r\n                            error={errors.confirmedPassword}\r\n                            inputRef={register({\r\n                                required: 'Este campo é obrigatório',\r\n                                pattern: {\r\n                                    value: value => value === getValues().password,\r\n                                    message: 'As senhas não combinam, tente novamente'\r\n                                }\r\n                            })}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <Senha color=\"primary\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                        {errors.confirmPassword && (<FormHelperText error>{errors.confirmPassword.message}</FormHelperText>)}\r\n                    </FormControl>\r\n                    <div style={{ display: 'flex', justifyContent: 'flex-end', width: '100%' }}>\r\n                        <Button variant=\"contained\" type=\"submit\" color=\"primary\" style={{ marginTop: '10px' }}>\r\n                            Redefinir\r\n                        </Button>\r\n                    </div>\r\n                </FormStyled>\r\n            </Grid>\r\n            <Snackbar\r\n                open={modalState.active}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n                autoHideDuration={3000}\r\n                onClose={() => {\r\n                    setModalState({ active: false })\r\n                }}\r\n            >\r\n                <Alert\r\n                    elevation={6}\r\n                    variant=\"filled\"\r\n                    onClose={() => setModalState({\r\n                        active: false\r\n                    })}\r\n                    severity={modalState.severity}\r\n                >\r\n                    {modalMsg}\r\n                </Alert>\r\n            </Snackbar>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default RedefinirAsenha;","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container'\r\nimport { Typography, Divider } from '@material-ui/core';\r\nimport { ProjectDetailsContainer, ProjectDetailSubtitle, ProjectDetailRegionContainer } from './style';\r\nimport { useStoreActions } from 'easy-peasy';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProjectDetails = ({ match }) => {\r\n    const [project, setProject] = useState({});\r\n    const { id } = match.params;\r\n\r\n    const getProject = useStoreActions(actions => actions.project.getProject);\r\n\r\n    useEffect(() => {\r\n        getProject(id)\r\n            .then(({ data }) => setProject(data.project))\r\n            .catch((err) => console.log(err));\r\n    }, [getProject, id]);\r\n    \r\n    const hasAttachments = Boolean(project.attachment);\r\n    const hasOthersContacts = Boolean(project.others_contacts);\r\n    const hasProjectCreators = Boolean(project.project_creators);\r\n    return (\r\n        <Container style={{ backgroundColor: 'white'}}>\r\n            <ProjectDetailsContainer>\r\n                <Typography variant=\"h5\">Nome do projeto</Typography>\r\n                <Typography variant=\"h2\" style={{ fontWeight: 'bold'}}>{project.title}</Typography>\r\n                <span> Data: {project.total_period}</span>\r\n                <ProjectDetailSubtitle>Descrição</ProjectDetailSubtitle>\r\n                <Typography component=\"p\" style={{ wordBreak: 'break-word' }}>{project.project_about}</Typography>\r\n                <Divider />\r\n                <ProjectDetailSubtitle>Categoria</ProjectDetailSubtitle>\r\n                <Typography component=\"p\" style={{ wordBreak: 'break-word' }}>{project.category}</Typography>\r\n                <ProjectDetailSubtitle>Sobre a categoria</ProjectDetailSubtitle>\r\n                <Typography component=\"p\" style={{ wordBreak: 'break-word', marginBottom: 10 }}>{project.category_about}</Typography>\r\n                <ProjectDetailRegionContainer>\r\n                    <div>\r\n                        <ProjectDetailSubtitle>Região</ProjectDetailSubtitle>\r\n                        <Typography component=\"p\">{project.project_region}</Typography>\r\n                    </div>\r\n                    <div>\r\n                        <ProjectDetailSubtitle>Escolha da região</ProjectDetailSubtitle>\r\n                        <Typography component=\"p\">{project.region_choice}</Typography>\r\n                    </div>\r\n                </ProjectDetailRegionContainer>\r\n                <ProjectDetailSubtitle>Arquivos</ProjectDetailSubtitle>\r\n                {hasAttachments && project.attachment.map((attachment) => {\r\n                    if(!attachment || !attachment.type) return null;\r\n                    const isVideo = attachment.type.includes('video');\r\n                    const isImg = attachment.type.includes('image');\r\n                    if(isVideo){\r\n                        return (\r\n                            <div style={{ marginBottom: 20 }}>\r\n                                <Typography component=\"h4\" style={{ wordBreak: 'break-word', marginBottom: 10 }}>{attachment.name}</Typography>\r\n                                <video src={attachment.url}  width=\"100%\" height=\"400\" controls/>\r\n                            </div>\r\n                        )\r\n                    }\r\n\r\n                    if (isImg) {\r\n                        return (\r\n                            <div style={{ marginBottom: 20, textAlign: 'center' }}>\r\n                                <p style={{ display: 'block' }}>Nome do arquivo: <b>{attachment.name}</b></p>\r\n                                <a \r\n                                    style={{\r\n                                        wordBreak: 'break-word',\r\n                                        fontSize: 24,\r\n                                        fontWeight: 'bold',\r\n                                        margin: 20\r\n                                    }}\r\n                                    download\r\n                                    href={attachment.url}\r\n                                >\r\n                                <img src={attachment.url} style={{ maxWidth: '450px', width: '100%', height: '100%' }} alt={attachment.name} />\r\n                            </a>\r\n                            </div>\r\n                        )\r\n                    }\r\n                   return (\r\n                            <a \r\n                            style={{\r\n                                wordBreak: 'break-word',\r\n                                fontSize: 24,\r\n                                fontWeight: 'bold',\r\n                                margin: 20\r\n                            }}\r\n                            download\r\n                            href={attachment.url}\r\n                            >\r\n                                {attachment.name}\r\n                            </a>\r\n                        )\r\n                })}\r\n                {hasProjectCreators && (\r\n                    <>\r\n                    <ProjectDetailSubtitle> Agência, assessoria, produta responsável pela criação e/ou produção do trabalho.</ProjectDetailSubtitle>\r\n                        {project.project_creators.map((contact) => (\r\n                            <div style={{ display: 'flex', justifyContent: 'center'}}>\r\n                                <div style={{ margin: 10 }}>\r\n                                    <span style={{ display: 'block', fontWeight: 'bold' }}>Razão Social</span>\r\n                                    <span style={{ display: 'block' }}>{contact.agency_name}</span>\r\n                                </div>\r\n                                <div style={{ margin: 10 }}>\r\n                                    <span style={{ display: 'block', fontWeight: 'bold' }}>Nome Fantasia</span>\r\n                                    <span style={{ display: 'block' }}>{contact.agency_fancy}</span>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </>\r\n                )}\r\n                {hasOthersContacts && (\r\n                <>\r\n                  <ProjectDetailSubtitle>Outros contatos</ProjectDetailSubtitle>\r\n                  {project.others_contacts.map((contact) => (\r\n                            <div style={{ display: 'flex', justifyContent: 'center'}}>\r\n                                {contact.name && (\r\n                                    <div style={{ margin: 10 }}>\r\n                                        <span style={{ display: 'block', fontWeight: 'bold' }}>Nome</span>\r\n                                        <span style={{ display: 'block' }}>{contact.name}</span>\r\n                                    </div>\r\n                                )}\r\n                                {contact.email && (\r\n                                    <div style={{ margin: 10 }}>\r\n                                        <span style={{ display: 'block', fontWeight: 'bold' }}>Email</span>\r\n                                        <span style={{ display: 'block' }}>{contact.email}</span>\r\n                                    </div>\r\n                                )}\r\n                                {contact.tel && (\r\n                                    <div style={{ margin: 10 }}>\r\n                                        <span style={{ display: 'block', fontWeight: 'bold' }}>Telefone</span>\r\n                                        <span style={{ display: 'block' }}>{contact.tel}</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        ))}\r\n                </>\r\n              )}\r\n            </ProjectDetailsContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ProjectDetails;","import React, { useState, useEffect } from \"react\"\r\nimport { useForm } from 'react-hook-form'\r\nimport { useStoreActions, useStoreState } from 'easy-peasy'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Switch from '../../components/material/Switch'\r\nimport { Error } from '../../components/Status'\r\n\r\nimport FileList from '../../components/FileList'\r\n\r\nimport Upload from '../../components/Upload'\r\n\r\nimport {\r\n  project_category,\r\n  project_region,\r\n  region_choice\r\n} from '../Signup/dicioFields'\r\nimport Button from '../../components/material/Button'\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport loading from '../../assets/loading.svg'\r\nimport { Container, SubTitle } from './style';\r\nimport { phoneMask } from '../../utils/masks';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport s3 from '../../aws-config';\r\nimport history from \"../../history\"\r\nimport { mountFileObj } from \"../../utils/service\"\r\nimport { WrapperLoadding } from \"../Dashboard/style\"\r\n\r\nconst EditProject = ({ match, location }) => {\r\n  const { id } = match.params;\r\n  const {\r\n    register, handleSubmit, errors, setError,\r\n  } = useForm()\r\n\r\n  const getProject = useStoreActions(actions => actions.project.getProject);\r\n  const editProject = useStoreActions(actions => actions.project.editProject)\r\n  const registerError = useStoreState(state => state.project.error)\r\n  const userType = useStoreState(state => state.auth.auth.user)\r\n  const typeOfUser = userType.type === \"enterprise\" ? \"empresa\" : \"agencia\"\r\n\r\n  const [modalState, setModalState] = useState({\r\n    message: '',\r\n    severity: null,\r\n    active: false,\r\n  })\r\n  const [files, setFiles] = useState([]);\r\n  const [authorizationLetter, setAuthorizationLetter] = useState([]);\r\n  const [signatureFile, setSignatureFile] = useState([]);\r\n  const [project, setProject] = useState({});\r\n  const [draft, setDraft] = useState(false);\r\n  const [projectCreatorIndex, setProjectCreatorIndex] = useState(1);\r\n  const [projectCreators, setProjectCreators] = useState([]);\r\n\r\n\r\n  const onSubmit = data => {\r\n    if (!data.agree) {\r\n      return setError('agree', 'notMatch', 'Este campo é obrigatório')\r\n    }\r\n\r\n    if (!draft && !signatureFile.length) {\r\n      return alert('Você precisa inserir uma assinatura digital.')\r\n    }\r\n\r\n    if (!draft && !authorizationLetter.length && typeOfUser === \"agencia\") {\r\n      return alert('Você precisa inserir uma carta de autorização.')\r\n    }\r\n\r\n    const filesArray = files.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload dos arquivos')\r\n        return false;\r\n      }\r\n      return { ...file };\r\n    });\r\n\r\n    const signaturesArray = signatureFile.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload da assinatura digital.')\r\n        return false;\r\n      }\r\n      return { ...file, signature: true, };\r\n    });\r\n\r\n    const authorizationLetterFile = userType.type === \"agency\" ? authorizationLetter.map((file) => {\r\n      if (!file.uploaded) {\r\n        alert('Aguarde o upload da carta de autorização')\r\n        return false;\r\n      }\r\n      return { ...file, authorizationLetter: true };\r\n    }) : [];\r\n\r\n    const formatted = {\r\n      ...data,\r\n      attachment: [...filesArray, ...signaturesArray, ...authorizationLetterFile]\r\n    }\r\n\r\n    if (draft) {\r\n      editProject({ ...formatted, id })\r\n        .then(() => {\r\n          setModalState({\r\n            active: true,\r\n            severity: 'success',\r\n            message: 'Projeto Editado com sucesso'\r\n          });\r\n          setTimeout(() => {\r\n            return history.push(`/dashboard/${typeOfUser}`)\r\n          }, 4000);\r\n        }).catch((err) => {\r\n          setModalState({\r\n            active: true,\r\n            severity: 'error',\r\n            message: 'Ops, não foi possível editar o projeto.'\r\n          });\r\n        });\r\n      return null;\r\n    }\r\n\r\n    const confirmMessage = 'Você confirma a veracidade dos dados do projeto? Não será possível editá-lo após a confirmação';\r\n\r\n    if (window.confirm(confirmMessage)) {\r\n      return editProject({ ...formatted, draft: false, complet_project: true, id })\r\n        .then(() => {\r\n          setModalState({\r\n            active: true,\r\n            severity: 'success',\r\n            message: 'Projeto Editado com sucesso'\r\n          });\r\n          setTimeout(() => {\r\n            return history.push(`/dashboard/${typeOfUser}`)\r\n          }, 4000);\r\n        }).catch((err) => {\r\n          setModalState({\r\n            active: true,\r\n            severity: 'error',\r\n            message: 'Ops, não foi possível editar o projeto.'\r\n          });\r\n        });\r\n    }\r\n\r\n    editProject({ ...formatted, id })\r\n      .then(() => {\r\n        const typeOfUser = userType.type === \"enterprise\" ? \"empresa\" : \"agencia\"\r\n        setModalState({\r\n          active: true,\r\n          severity: 'success',\r\n          message: 'Projeto Editado com sucesso'\r\n        });\r\n        setTimeout(() => {\r\n          return history.push(`/dashboard/${typeOfUser}`)\r\n        }, 4000);\r\n      }).catch((err) => {\r\n        setModalState({\r\n          active: true,\r\n          severity: 'error',\r\n          message: 'Ops, não foi possível editar o projeto.'\r\n        });\r\n      })\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    return setFiles((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const onUpload = ([file]) => {\r\n    // total of unique file\r\n    const maxSize = 50 * 1024 * 1024;\r\n    // total of all files together\r\n    const totalMaxFile = 100 * 1024 * 1024;\r\n\r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande')\r\n    }\r\n\r\n    const fileSizes = files.map(({ size }) => size).reduce((accumulator, val) => accumulator + val, 1) + file.size;\r\n\r\n    if (totalMaxFile < fileSizes) {\r\n      return alert('Os seus arquivos excederam o limite máximo de 100mb');\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setFiles(state => state.map((file) => file.id === fileObj.id ? { ...file, error: true } : { ...file }))\r\n      };\r\n      setFiles(state => state.map((file) => file.id === fileObj.id ? { ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true } : { ...file }))\r\n    });\r\n    setFiles(state => [...state, { ...fileObj, }])\r\n  }\r\n\r\n  const handleDeleteAuthorizationLetter = (id) => {\r\n    return setAuthorizationLetter((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const handleDeleteSignatures = (id) => {\r\n    return setSignatureFile((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const handleDeleteFiles = (id) => {\r\n    return setFiles((state) => state.filter((file) => file.id !== id));\r\n  };\r\n\r\n  const uploadAuthorizationLetter = ([file]) => {\r\n    if (authorizationLetter.length) {\r\n      return alert('Você já anexou uma carta de autorização.');\r\n    }\r\n\r\n    const maxSize = 3 * 1024 * 1024;\r\n\r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande');\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setAuthorizationLetter(state => state.map((file) => ({ ...file, error: true })))\r\n        return false;\r\n      };\r\n      if (data) {\r\n        setAuthorizationLetter(state => state.map((file) => ({ ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true })))\r\n      }\r\n    });\r\n    setAuthorizationLetter(state => [...state, { ...fileObj, }])\r\n\r\n  }\r\n\r\n  const onUploadSignature = ([file]) => {\r\n    if (signatureFile.length >= 3) {\r\n      return alert('Limite máximo de 3 assinaturas');\r\n    }\r\n\r\n    const maxSize = 3 * 1024 * 1024;\r\n\r\n    if (file.size >= maxSize) {\r\n      return alert('Arquivo muito grande')\r\n    }\r\n\r\n    const { s3Options, fileObj } = mountFileObj(file);\r\n\r\n    s3.upload(s3Options, (err, data) => {\r\n      if (err) {\r\n        setSignatureFile(state => state.map((file) => ({ ...file, error: true })))\r\n        return false;\r\n      };\r\n      if (data) {\r\n        setSignatureFile(state => state.map((file) => ({ ...file, key: data.Key, url: data.Location, size: file.file.size, uploaded: true })))\r\n      }\r\n    });\r\n    setSignatureFile(state => [...state, { ...fileObj, }])\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProject(id)\r\n      .then(({ data }) => {\r\n        setProject(data.project)\r\n        setProjectCreators(data.project?.project_creators.map((project, key) => ({ ...project, key })))\r\n        setProjectCreatorIndex(data.project?.project_creators?.length)\r\n        console.log({ data: data.project })\r\n        data.project.attachment.map((file) => {\r\n          console.log({ file })\r\n          if (file.signature) {\r\n            return setSignatureFile(state => state.concat({ ...file, uploaded: true }));\r\n          }\r\n\r\n          if (file.authorizationLetter) {\r\n            return setAuthorizationLetter(state => state.concat({ ...file, uploaded: true }))\r\n          }\r\n          return setFiles(state => state.concat({ ...file, uploaded: true }));\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, [getProject, id]);\r\n\r\n  const hasProjectData = Object.values(project).some(Boolean)\r\n\r\n  const addProjectCreator = (index) => {\r\n    if (projectCreators.length >= 20) return false;\r\n    setProjectCreatorIndex((index) => index + 1);\r\n    const inputProps = [\r\n      {\r\n        name: `project_creators[${index}].agency_fancy`,\r\n        fancyName: `project_creators[${index}].agency_name`,\r\n        key: projectCreatorIndex,\r\n      },\r\n    ]\r\n    setProjectCreators((state) => state.concat(inputProps));\r\n  }\r\n\r\n  const removeProjectCreatorsFields = (key) => {\r\n    setProjectCreators((state) => state.filter((project) => project.key !== key));\r\n    setProjectCreatorIndex((index) => index - 1);\r\n  };\r\n\r\n  if (!hasProjectData) {\r\n    return (\r\n      <Container>\r\n        <WrapperLoadding>\r\n          <img src={loading} alt=\"loading\" />\r\n        </WrapperLoadding>\r\n      </Container>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={handleSubmit(onSubmit)} style={{ maxWidth: 1024, margin: '0 auto' }}>\r\n        <Typography variant=\"h2\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n          Editar o projeto\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"title\"\r\n              fullWidth\r\n              error={errors.title && errors.title.message}\r\n              helperText={errors.title && errors.title.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n              })}\r\n              label=\"Nome do Projeto\"\r\n              variant=\"filled\"\r\n              defaultValue={project.title}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              name=\"total_period\"\r\n              type=\"date\"\r\n              fullWidth\r\n              error={errors.total_period && errors.total_period.message}\r\n              helperText={errors.total_period && errors.total_period.message}\r\n              inputRef={register({\r\n                required: 'Este campo é obrigatório',\r\n                pattern: {\r\n                  message: 'Data inválida'\r\n                }\r\n              })}\r\n              inputProps={{\r\n                min: '2019-01-01',\r\n                max: '2020-08-31',\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              label=\"Período do Projeto\"\r\n              placeholder=\"Período em que o projeto foi desenvolvido dentro do tempo estipulado\"\r\n              variant=\"filled\"\r\n              defaultValue={project.total_period}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"project_about\"\r\n              fullWidth\r\n              multiline\r\n              rows=\"5\"\r\n              error={errors.project_about && errors.project_about.message}\r\n              helperText={errors.project_about && errors.project_about.message}\r\n              inputRef={register}\r\n              inputProps={{\r\n                maxLength: 900\r\n              }}\r\n              label=\"Resumo sobre o projeto\"\r\n              variant=\"filled\"\r\n              defaultValue={project.project_about}\r\n            />\r\n          </Grid>\r\n\r\n\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Categoria em que o Projeto ocorre\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={project_category}\r\n              defaultValue={project.category}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"category\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Categoria\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Selecione a categoria\"\r\n                  error={errors.project_category && errors.project_category.message}\r\n                  helperText={errors.project_category && errors.project_category.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              name=\"category_about\"\r\n              fullWidth\r\n              multiline\r\n              rows=\"5\"\r\n              error={errors.category_about && errors.category_about.message}\r\n              helperText={errors.category_about && errors.category_about.message}\r\n              inputRef={register}\r\n              inputProps={{\r\n                maxLength: 500\r\n              }}\r\n              label=\"Escreva o porquê da escolha da categoria\"\r\n              variant=\"filled\"\r\n              defaultValue={project.category_about}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={project_region.sort()}\r\n              defaultValue={project.project_region}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"project_region\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Região\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Escolha a região\"\r\n                  error={errors.project_region && errors.project_region.message}\r\n                  helperText={errors.project_region && errors.project_region.message}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              fullWidth\r\n              options={region_choice.sort()}\r\n              defaultValue={project.region_choice}\r\n              renderInput={params => (\r\n                <TextField\r\n                  {...params}\r\n                  name=\"region_choice\"\r\n                  inputRef={register}\r\n                  color=\"secondary\"\r\n                  label=\"Escolha abaixo uma das opções do porquê da escolha da região\"\r\n                  variant=\"filled\"\r\n                  placeholder=\"Digite sua Região\"\r\n                  error={errors.region_choice && errors.region_choice.message}\r\n                  helperText={errors.region_choice && errors.region_choice.message}\r\n                />\r\n              )}\r\n            />\r\n            <p>\r\n              com base nos critérios dos itens III.7 e III.7.1 do regulamento\r\n            </p>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              <p>Abaixo insira <b>todos</b> os arquivos do seu projeto. As extensões permitidas são: <b>.PDF, .DOC, .DOCX, .MP4 e .MOV  </b></p>\r\n              <p>\r\n                A soma de todos os seus arquivos enviados não deve ultrapassar <b>100 megas</b>, o arquivo de vídeo case (sozinho) pode chegar até <b>50 megas</b>, se estiver maior,\r\n              envie uma versão com menor qualidade, ela servirá somente para a análise do conteúdo do projeto. Caso o seu trabalho venha a ser classificado, vencedor regional,\r\n              será solicitada uma cópia em alta resolução para exibição.\r\n              </p>\r\n              <p>\r\n                Clique no box branco abaixo ou arraste os arquivos para fazer upload.\r\n              </p>\r\n              <Upload onUpload={onUpload}  />\r\n            </div>\r\n            <FileList files={files} handleDelete={handleDeleteFiles} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Agência, assessoria, produta responsável pela criação e/ou produção do trabalho.\r\n            </Typography>\r\n            <div style={{ margin: '10px 0px', width: '100%', display: 'flex', justifyContent: 'space-between' }}>\r\n              <div style={{ width: \"100%\", textAlign: 'center' }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  endIcon={<AddCircleIcon />}\r\n                  onClick={() => addProjectCreator(projectCreatorIndex)}\r\n                  disabled={projectCreators.length >= 20}\r\n                >\r\n                  Adicionar\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <Grid container xs={12} spacing={2}>\r\n              {projectCreators.map((inputProps, index) => {\r\n                const renderRemoveButton = index > 0;\r\n                return (\r\n                  <>\r\n                    <Grid item xs={6} style={{ position: \"relative\" }}>\r\n                      <TextField\r\n                        fullWidth\r\n                        name={inputProps.name || `project_creators[${index}].agency_name`}\r\n                        label=\"Razão Social\"\r\n                        placeholder=\"Insira a razão social\"\r\n                        inputRef={register}\r\n                        defaultValue={inputProps.agency_fancy}\r\n                        variant=\"filled\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6} style={{ position: \"relative\" }}>\r\n                      <TextField\r\n                        fullWidth\r\n                        name={inputProps.fancyName || `project_creators[${index}].agency_fancy`}\r\n                        label=\"Nome Fantasia\"\r\n                        placeholder=\"Insira o nome fantasia\"\r\n                        inputRef={register}\r\n                        defaultValue={inputProps.agency_name}\r\n                        variant=\"filled\"\r\n                      />\r\n                    </Grid>\r\n                    {renderRemoveButton && (\r\n                      <div style={{ width: '100%', textAlign: 'right' }}>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault();\r\n                            removeProjectCreatorsFields(index)\r\n                          }}>\r\n                          Remover\r\n                          </Button>\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Outros Contatos\r\n            </Typography>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].name\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  label=\"Nome Completo\"\r\n                  variant=\"filled\"\r\n                  defaultValue={project.others_contacts[0].name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].email\"\r\n                  inputRef={register}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  label=\"Email\"\r\n                  variant=\"filled\"\r\n                  defaultValue={project.others_contacts[0].email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[0].tel\"\r\n                  inputRef={register}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  label=\"Telefone\"\r\n                  variant=\"filled\"\r\n                  onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                  defaultValue={project.others_contacts[0].tel}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].name\"\r\n                  inputRef={register}\r\n                  fullWidth\r\n                  label=\"Nome Completo\"\r\n                  variant=\"filled\"\r\n                  defaultValue={project.others_contacts[1].name}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].email\"\r\n                  inputRef={register}\r\n                  type=\"email\"\r\n                  fullWidth\r\n                  label=\"E-mail\"\r\n                  variant=\"filled\"\r\n                  defaultValue={project.others_contacts[1].email}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  name=\"others_contacts[1].tel\"\r\n                  inputRef={register}\r\n                  type=\"text\"\r\n                  fullWidth\r\n                  label=\"Telefone\"\r\n                  variant=\"filled\"\r\n                  onInput={({ target }) => target.value = phoneMask(target.value)}\r\n                  defaultValue={project?.others_contacts?.[1].tel}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n              Assinatura Digital\r\n            </Typography>\r\n            <div>\r\n              <p style={{ textAlign: 'center' }}>\r\n                Suba a imagem de sua assinatura digital, se estiver cadastrado como agência, também é obrigatório o envio de uma carta de autorização.\r\n                <b>Tamanho máximo 3mb</b>\r\n              </p>\r\n              <Upload onUpload={onUploadSignature} filesAccepted=\".jpg, .jpeg, .png, .doc\" label=\"Anexar assinatura digital\" />\r\n            </div>\r\n            <FileList files={signatureFile} handleDelete={handleDeleteSignatures} />\r\n          </Grid>\r\n          {userType.type === \"agency\" && (\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"h5\" style={{ textAlign: 'center', fontWeight: 'bold', margin: '20px 0' }}>\r\n                Carta de autorização.\r\n              </Typography>\r\n              <div>\r\n                <p style={{ textAlign: 'center' }}>\r\n                  Você como agência, envie a carta de autorização conforme o <a href=\"http://www.aberje.com.br/premio/opremio.html\" target=\"_blank\" rel=\"noopener noreferrer\">regulamento.</a>\r\n                  <b>Tamanho máximo de 3mb.</b>\r\n                </p>\r\n                <Upload onUpload={uploadAuthorizationLetter} filesAccepted=\".jpg, .jpeg, .png, .doc\" label=\"Anexar carta de autorização\" />\r\n              </div>\r\n              <FileList files={authorizationLetter} handleDelete={handleDeleteAuthorizationLetter} />\r\n            </Grid>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h5\" style={{ fontWeight: 'bold' }}>\r\n              Atestamos a veracidade das informações apresentadas pela nossa organização inscrita no Prêmio Aberje 2020.\r\n            </Typography>\r\n            <SubTitle>\r\n              Autorizamos a publicação, na íntegra ou em parte, do trabalho inscrito no Prêmio Aberje 2020, em quaisquer veículos de comunicação de responsabilidades direta da Aberje.\r\n              Os trabalhos inscritos por assessorias, agências ou profissionais autônomos externos declaram possuir autorização da empresa cliente para participar do Prêmio Aberje 2019, essa autorização deverá ser entregue juntamente com o trabalho.\r\n            </SubTitle>\r\n            {userType.type === \"agency\" && (\r\n              <SubTitle>\r\n                Declaramos contar com autorização assinada pela empresa cliente para inscrever este trabalho no Prêmio Aberje 2020 e nos comprometemos a enviá-la,\r\n                em versão digital à Aberje, juntamente com o arquivo eletrônico do trabalho.\r\n              </SubTitle>\r\n            )}\r\n            <Switch\r\n              name=\"agree\"\r\n              label=\"Estou de acordo\"\r\n              register={register}\r\n              error={errors.agree && errors.agree.message}\r\n              defaultChecked={project.agree}\r\n              required\r\n            />\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Error msg={registerError && registerError.project} />\r\n        <Button type=\"submit\" variant=\"contained\" styles={{ marginRight: 10 }} onClick={() => setDraft(true)}>\r\n          Editar como rascunho\r\n        </Button>\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          Finalizar Projeto\r\n        </Button>\r\n      </form>\r\n\r\n      <Snackbar open={modalState.active} autoHideDuration={4000} onClose={() => setModalState(false)}>\r\n        <Alert elevation={6} variant=\"filled\" onClose={() => setModalState(false)} severity={modalState.severity}>\r\n          {modalState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Container >\r\n  )\r\n}\r\n\r\nexport default EditProject;","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useStoreState, useStoreActions } from 'easy-peasy';\r\nimport DashboardProjectList from './DashboardProjectList';\r\nimport { Container, Typography, Grid } from '@material-ui/core'\r\nimport FormText from '../../components/material/FormText';\r\n\r\nconst UserProjectsList = ({ match }) => {\r\n    const { id } = match.params;\r\n    const allProjects = useStoreState(({ project }) => project.allProjects) || [];\r\n    const getProjects = useStoreActions(state => state.project.getAllProjects)\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        getProjects(id);\r\n    }, [getProjects, id]);\r\n    \r\n    const filterCallback = (project) => project.title.toLowerCase().includes(searchValue);\r\n    const filteredList = allProjects && allProjects.filter(filterCallback);\r\n\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h3\" style={{ textAlign: 'left', fontWeight: 'bold', margin: '20px 0px' }}>\r\n                Todos os projetos\r\n            </Typography>\r\n            <Grid container xs={12} style={{ marginBottom: 20 }}>\r\n                <FormText\r\n                    label=\"Pesquisar projeto\"\r\n                    onChange={({ target }) => setSearchValue(target.value.toLowerCase())}\r\n                />\r\n            </Grid>\r\n            <DashboardProjectList  projects={filteredList ? filteredList : allProjects}/>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default UserProjectsList;","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\nimport { Route, Redirect } from 'react-router'\r\n\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { Router, Switch } from 'react-router-dom'\r\nimport { StoreProvider } from 'easy-peasy'\r\nimport theme from './utils/theme'\r\nimport history from './history'\r\n\r\nimport Header from './components/material/Header'\r\nimport AppBody from './components/material/AppBody'\r\n\r\nimport Users from './pages/Signup/User'\r\nimport Login from './pages/Login/Login'\r\n\r\nimport Dashboard from './pages/Dashboard/index'\r\nimport Admin from './pages/Dashboard/Admin/Admin'\r\nimport PrivateRoute from './components/PrivateRoute'\r\n\r\nimport Enterprise from './pages/Signup/Enterprise'\r\nimport AllEnterprises from './pages/Enterprises/index'\r\n\r\nimport Agency from './pages/Signup/Agency'\r\nimport AllAgencies from './pages/Agency/index'\r\nimport AllProjects from './pages/Project/AllProjects'\r\nimport ProjectRegister from './pages/Project/ProjectRegister'\r\nimport EsqueciSenha from './pages/EsqueciSenha/EsqueciSenha'\r\nimport RedefinirAsenha from './pages/RedefinirAsenha/RedefinirAsenha'\r\nimport ProjectDetails from './pages/Project/ProjectDetails'\r\nimport EditProject from './pages/Project/EditProject'\r\nimport UserProjectsList from './pages/Project/UserProjectsList'\r\n\r\n\r\nconst App = ({ store }) => {\r\n  return (\r\n    <Router history={history}>\r\n      <StoreProvider store={store}>\r\n        <ThemeProvider theme={theme}>\r\n          <>\r\n            <Header\r\n              isOpened={true}\r\n            />\r\n            <AppBody>\r\n              <base href=\"/\" />\r\n              <Switch>\r\n                <Route path=\"/\" exact component={Login} />\r\n                <Route path=\"/cadastro\" exact component={Users} />\r\n                <Route path=\"/esqueci-senha\" exact component={EsqueciSenha} />\r\n                <Route path=\"/reset/:token\" component={RedefinirAsenha} />\r\n                <PrivateRoute\r\n                  exact\r\n                  path='/listagem/projetos/:id'\r\n                  component={AllProjects}\r\n                />\r\n               <PrivateRoute\r\n                  exact\r\n                  path='/listagem/:userType/projetos/:id'\r\n                  component={UserProjectsList}\r\n                />\r\n                <PrivateRoute\r\n                  path='/projeto/:id'\r\n                  exact\r\n                  component={ProjectDetails}\r\n                />\r\n                \r\n                <PrivateRoute\r\n                  path='/projeto/editar/:id'\r\n                  component={EditProject}\r\n                />\r\n                <PrivateRoute path='/cadastro/projeto' component={ProjectRegister} />\r\n                <PrivateRoute path='/cadastro/empresa' component={Enterprise} />\r\n\r\n                <Route path='/cadastro/agencia' component={Agency} />\r\n\r\n\r\n                <PrivateRoute path='/dashboard/admin' exact component={Admin} />\r\n                <PrivateRoute\r\n                  path='/dashboard/admin/empresas'\r\n                  component={AllEnterprises}\r\n                />\r\n\r\n                <PrivateRoute\r\n                  path='/dashboard/admin/agencias'\r\n                  component={AllAgencies}\r\n                />\r\n\r\n                <PrivateRoute\r\n                  path='/dashboard/empresa'\r\n                  component={Dashboard}\r\n                />\r\n\r\n\r\n                <PrivateRoute\r\n                  path='/dashboard/agencia'\r\n                  component={Dashboard}\r\n                />\r\n\r\n                <Redirect from='*' to='/' />\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        </ThemeProvider>\r\n      </StoreProvider>\r\n    </Router>\r\n  )\r\n}\r\n\r\nApp.propTypes = {\r\n  store: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default App\r\n","import authModel from './auth'\r\nimport registerModel from './register'\r\nimport userModel from './user'\r\nimport projectModel from './project'\r\nimport enterpriseModel from './enterprise'\r\nimport agencyModel from './agency'\r\nimport uiModel from './ui'\r\n\r\nexport default {\r\n  authModel,\r\n  registerModel,\r\n  userModel,\r\n  projectModel,\r\n  enterpriseModel,\r\n  agencyModel,\r\n  uiModel\r\n}","import { thunk, action } from 'easy-peasy'\r\nimport jwtDecode from 'jwt-decode'\r\nimport axios from 'axios'\r\n\r\nimport setAuthToken from '../utils/setAuthToken'\r\nimport history from '../history'\r\nimport { isEmpty, getUserType } from '../utils/service'\r\n\r\nconst authModel = {\r\n  authUser: thunk(async (actions, payload) => {\r\n    try {\r\n      const res = await axios.post('/api/user/login', payload)\r\n\r\n      // Set token to localStorage\r\n      const { token } = res.data\r\n      localStorage.setItem('jwtToken', token)\r\n\r\n      // Set token to auth header\r\n      setAuthToken(token)\r\n\r\n      // Decode token to get user data\r\n      const decoded = jwtDecode(token)\r\n\r\n      // Set current user\r\n      actions.setAuth({\r\n        isAuthenticated: !isEmpty(decoded),\r\n        user: decoded\r\n      })\r\n\r\n      localStorage.removeItem('user_type')\r\n\r\n      try {\r\n        const check = await axios.get('/api/user/has-additional-register')\r\n        const type = getUserType(decoded.type)\r\n\r\n        if (check.data.hasAdditionalRegister || type === 'admin') {\r\n          return history.push(`/dashboard/${type}`)\r\n        }\r\n\r\n        return history.push(`/cadastro/${type}`)\r\n      }\r\n      catch (err) {\r\n        const error = err.response.data\r\n        return actions.setErrors({ ...error })\r\n      }\r\n    }\r\n    catch (err) {\r\n      const error = err && err.response.data\r\n      return actions.setErrors({ ...error })\r\n    }\r\n  }),\r\n  logoutUser: thunk(async (actions, payload) => {\r\n    // Remove token from localStorage\r\n    localStorage.clear()\r\n\r\n    // Remove auth header for future requests\r\n    setAuthToken(false)\r\n\r\n    // Set the current user to {} wich will set isAuthenticated to false\r\n    actions.setAuth({\r\n      isAuthenticated: false,\r\n      user: {}\r\n    })\r\n\r\n    history ? history.push('/') : window.location.href = '/'\r\n  }),\r\n  auth: {\r\n    isAuthenticated: false,\r\n    user: {}\r\n  },\r\n  setAuth: action((state, payload) => ({\r\n    auth: { ...payload }\r\n  })),\r\n  error: {},\r\n  setErrors: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\nexport default authModel","import { thunk, action } from 'easy-peasy'\r\nimport axios from 'axios'\r\nimport history from '../history'\r\n\r\nconst registerModel = {\r\n  registerEnterprise: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.post('/api/enterprise/register', payload)\r\n      return response;\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data\r\n      actions.setErrors({ ...error });\r\n      return error;\r\n    }\r\n  }),\r\n\r\n  registerAgency: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.post('/api/agency/register', payload)\r\n      return response;\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data\r\n      actions.setErrors({ ...error });\r\n      return error;\r\n    }\r\n  }),\r\n\r\n\r\n  registerUser: thunk(async (actions, payload) => {\r\n    try {\r\n      await axios.post('/api/user/register', payload)\r\n      return history.push('/')\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      const error = {\r\n        user: err.response.data && err.response.data.register\r\n      }\r\n      return actions.setErrors(error)\r\n    }\r\n  }),\r\n\r\n\r\n  error: {},\r\n  setErrors: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\n\r\nexport default registerModel","import { thunk, action } from 'easy-peasy'\r\nimport axios from 'axios'\r\n\r\nconst userModel = {\r\n  user: {},\r\n  error: {},\r\n  resetPassword: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.post(`/api/user/reset/${payload.token}`, payload)\r\n      return response;\r\n    } catch (err) {\r\n      const error = err.response.data\r\n      return actions.setError({ ...error })\r\n    }\r\n  }),\r\n  forgotPassword: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.post('/api/user/forgot-password', payload);\r\n      return response;\r\n    } catch (err) {\r\n      const error = err.response.data\r\n      return actions.setError({ ...error })\r\n    }\r\n  }),\r\n  getUser: thunk(async (actions, payload) => {\r\n    try {\r\n      const user = await axios.get('/api/user/current')\r\n      const userTypeData = await axios.get(`/api/${payload}`)\r\n      // Set current user profile\r\n      actions.setUser({\r\n        ...userTypeData.data,\r\n        ...user.data,\r\n        enterprise_id: userTypeData.data._id,\r\n        agency_id: userTypeData.data._id\r\n      })\r\n    }\r\n    catch (e) {\r\n      throw e\r\n    }\r\n  }),\r\n  getUserById: thunk(async (actions, payload) => {\r\n    try {\r\n      const user = await axios.get(`/api/user/${payload}`)\r\n      // Set current user profile\r\n\r\n      actions.setUser({\r\n        id: user.data._id,\r\n        name: user.data.name,\r\n        email: user.data.email,\r\n        phone: user.data.phone,\r\n        type: user.data.type\r\n\r\n      })\r\n    }\r\n    catch (e) {\r\n      actions.setError(e)\r\n    }\r\n  }),\r\n  editUser: thunk(async (actions, payload) => {\r\n    try {\r\n      return axios.put(`/api/user/edit/${payload.type}/${payload.id}`, payload)\r\n    }\r\n    catch (e) {\r\n      actions.setError(e)\r\n    }\r\n  }),\r\n  getAllUsers: thunk(async (actions) => {\r\n    try {\r\n      return await axios.get('/api/user/all')\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data && err.response.data.users\r\n      actions.setError(error)\r\n    }\r\n  }),\r\n  setUser: action((state, payload) => ({\r\n    user: { ...payload }\r\n  })),\r\n  setError: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\nexport default userModel","import { thunk, action } from 'easy-peasy'\r\nimport axios from 'axios'\r\n\r\nconst projectModel = {\r\n  registerProject: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.post('/api/project/register', payload)\r\n      return response;\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data && err.response.data.project\r\n      actions.setError(error)\r\n    }\r\n  }),\r\n  getAllProjects: thunk(async (actions, payload) => {\r\n    try {\r\n      actions.setProjects([])\r\n      const { data } = await axios.get(`/api/project/all/${payload}`)\r\n      actions.setProjects(data)\r\n      return data;\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n    }\r\n  }),\r\n  getProject: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.get(`/api/project/${payload}`)\r\n      return response;\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data\r\n      actions.setError({ ...error })\r\n    }\r\n  }),\r\n  editProject: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.put(`/api/project/edit/${payload.id}`, payload);\r\n      return response;\r\n    }\r\n    catch (err) {\r\n      const error = err.response.data && err.response.data.project\r\n      actions.setError(error)\r\n    }\r\n  }),\r\n  project: {},\r\n  setProject: action((state, payload) => ({\r\n    project: payload\r\n  })),\r\n  allProjects: [],\r\n  setProjects: action((state, payload) => ({\r\n    allProjects: payload\r\n  })),\r\n  error: {},\r\n  setError: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\nexport default projectModel","import { thunk, action } from 'easy-peasy'\r\nimport axios from 'axios'\r\n\r\nconst enterpriseModel = {\r\n  createEnterprise: thunk(async (actions, payload) => {\r\n    try {\r\n      const { data } = await axios.post(`/api/enterprise/register/${payload.agency_id}`, payload)\r\n      return data;\r\n    }\r\n    catch (e) {\r\n      actions.setError(e.response)\r\n      return e.response;\r\n    }\r\n  }),\r\n  editEnterprise: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.put(`/api/enterprise/edit/${payload.id}`, payload)\r\n      return response;\r\n    }\r\n    catch (e) {\r\n      actions.setError(e.response)\r\n      return e.response;\r\n    }\r\n  }),\r\n  getAllEnterpriseUsers: thunk(async (actions, payload) => {\r\n    try {\r\n      const enterprises = await axios.get('/api/enterprise/all')\r\n      const users = await axios.get('/api/user/all')\r\n\r\n      const fuse = (users.data)\r\n        .filter(userFilter => userFilter.type === 'enterprise')\r\n        .map(user => {\r\n          const enterprise = (enterprises.data).filter(i => i.user_id === user._id)\r\n          if (enterprise.length > 0) {\r\n            return {\r\n              ...enterprise[0],\r\n              ...user,\r\n              enterprise_id: enterprise[0]._id,\r\n              enterprise_name: enterprise[0].enterprise_name\r\n            }\r\n          }\r\n          return false\r\n        })\r\n      actions.setEnterprises(fuse)\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      const error = err.response.data && err.response.data.enterprises\r\n      actions.setError(error)\r\n    }\r\n  }),\r\n  getEnterpriseById: thunk(async (actions, payload) => {\r\n    try {\r\n      const enterprise = await axios.get(`/api/enterprise/${payload}`)\r\n\r\n      actions.setEnterprises({\r\n        id: enterprise.data._id,\r\n        user_email: enterprise.data.email,\r\n        aberje_associate: enterprise.data.aberje_associate,\r\n        enterprise_name: enterprise.data.name,\r\n        enterprise_fancy: enterprise.data.enterprise_fancy,\r\n        cnpj: enterprise.data.cnpj,\r\n        cep: enterprise.data.cep,\r\n        address: enterprise.data.address,\r\n        address_complement: enterprise.data.address,\r\n        neighborhood: enterprise.data.neighborhood,\r\n        qtd_projects: enterprise.data.qtd_projects,\r\n        observation: enterprise.data.observation,\r\n        enterprise_tel: enterprise.data.enterprise_tel\r\n      })\r\n    }\r\n    catch (e) {\r\n      actions.setError(e)\r\n    }\r\n  }),\r\n  getAll: thunk(async (actions, payload) => {\r\n    try {\r\n      return await axios.get('/api/enterprise/all')\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      return err.response\r\n    }\r\n  }),\r\n  getEnterprisesByAgencyId: thunk(async (actions, payload) => {\r\n    try {\r\n      const { data } = await axios.get(`/api/enterprise/all/${payload}`);\r\n      actions.setEnterprises(data);\r\n      return data;\r\n    } catch (err) {\r\n      console.log({ err })\r\n      return err;\r\n    }\r\n  }),\r\n  enterprises: [],\r\n  setEnterprises: action((state, payload) => ({\r\n    enterprises: payload\r\n  })),\r\n  error: {},\r\n  setError: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\nexport default enterpriseModel","import { thunk, action } from 'easy-peasy'\r\nimport axios from 'axios'\r\n\r\nconst agencyModel = {\r\n  editAgency: thunk(async (actions, payload) => {\r\n    try {\r\n      const response = await axios.put(`/api/agency/edit/${payload.id}`, payload)\r\n      return response;\r\n    }\r\n    catch (e) {\r\n      actions.setError(e)\r\n    }\r\n  }),\r\n  getAllAgencyUsers: thunk(async (actions, payload) => {\r\n    try {\r\n      const agencies = await axios.get('/api/agency/all')\r\n      const users = await axios.get('/api/user/all')\r\n\r\n      const fuse = (users.data)\r\n        .filter(userFilter => userFilter.type === 'agency')\r\n        .map(user => {\r\n          const agency = (agencies.data).filter(i => i.user_id === user._id)\r\n          if (agency.length > 0) {\r\n            return {\r\n              ...agency[0],\r\n              ...user,\r\n              agency_id: agency[0]._id,\r\n              agency_name: agency[0].agency_name\r\n            }\r\n          }\r\n          return false\r\n        })\r\n      actions.setAgencies(fuse)\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      const error = err.response.data && err.response.data.agencies\r\n      actions.setError(error)\r\n    }\r\n  }),\r\n  getAgencyById: thunk(async (actions, payload) => {\r\n    try {\r\n      const agency = await axios.get(`/api/agency/${payload}`)\r\n\r\n      actions.setAgencies({\r\n        id: agency.data._id,\r\n        user_email: agency.data.email,\r\n        aberje_associate: agency.data.aberje_associate,\r\n        agency_name: agency.data.agency_name,\r\n        agency_fancy: agency.data.agency_fancy,\r\n        cnpj: agency.data.cnpj,\r\n        cep: agency.data.cep,\r\n        address: agency.data.address,\r\n        addres_complement: agency.data.addres_complement,\r\n        neighborhood: agency.data.neighborhood,\r\n        city: agency.data.city,\r\n        qtd_projects: agency.data.qtd_projects,\r\n        observation: agency.data.observation,\r\n        agency_tel: agency.data.agency_tel\r\n      })\r\n    }\r\n    catch (e) {\r\n      actions.setError(e)\r\n    }\r\n  }),\r\n  getAll: thunk(async (actions, payload) => {\r\n    try {\r\n      return await axios.get('/api/agency/all')\r\n    }\r\n    catch (err) {\r\n      console.log(err)\r\n      return err.response\r\n    }\r\n  }),\r\n  agencies: [],\r\n  setAgencies: action((state, payload) => ({\r\n    agencies: payload\r\n  })),\r\n  error: {},\r\n  setError: action((state, payload) => ({\r\n    error: payload\r\n  }))\r\n}\r\n\r\nexport default agencyModel","import { action } from 'easy-peasy'\r\n\r\nconst uiModel = {\r\n  menuOpened: false,\r\n\r\n  toggleMenu: action((state, payload) => ({\r\n    menuOpened: payload\r\n  }))\r\n}\r\n\r\nexport default uiModel","import { createStore } from 'easy-peasy';\r\nimport GlobalModels from './models'\r\n\r\nconst {\r\n  example,\r\n  authModel,\r\n  uiModel,\r\n  registerModel,\r\n  userModel,\r\n  projectModel,\r\n  enterpriseModel,\r\n  agencyModel,\r\n} = GlobalModels\r\n\r\nconst storeModel = {\r\n  products: example,\r\n  auth: authModel,\r\n  register: registerModel,\r\n  user: userModel,\r\n  project: projectModel,\r\n  enterprise: enterpriseModel,\r\n  agency: agencyModel,\r\n  ui: uiModel\r\n};\r\n\r\nconst store = createStore(storeModel);\r\n\r\nexport default store","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport store from './store'\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.scss'\r\n\r\nReactDOM.render(<App store={store} />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}